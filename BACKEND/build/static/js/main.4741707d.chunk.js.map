{"version":3,"sources":["config.js","auth/index.js","core/Menu.js","core/cartHelpers.js","core/Layout.js","user/Signup.js","user/Signin.js","core/apiCore.js","core/ShowImage.js","core/Card.js","core/Search.js","core/Home.js","auth/PrivateRoute.js","user/UserDashboard.js","auth/AdminRoute.js","user/AdminDashboard.js","admin/AddCategory.js","admin/apiAdmin.js","admin/AddProduct.js","core/RadioBox.js","core/fixedPrices.js","core/Checkbox.js","core/Shop.js","core/Product.js","core/Checkout.js","core/Cart.js","Routes.js","index.js"],"names":["API","process","isAuthenticated","window","localStorage","getItem","JSON","parse","isActive","history","path","location","pathname","color","withRouter","className","style","to","length","cursor","onClick","next","removeItem","fetch","method","then","response","console","log","catch","err","signout","push","Layout","title","description","children","Signup","useState","name","email","password","error","success","values","setValues","handleChange","event","target","value","clickSubmit","user","preventDefault","headers","Accept","body","stringify","json","data","display","onChange","type","Signin","loading","redirectToReferrer","signin","setItem","authenticate","role","getProducts","sortBy","getCategories","getFilteredProducts","skip","limit","filters","ShowImage","item","url","src","_id","alt","maxHeight","maxWidth","Card","product","showViewProductButton","showAddToCartButton","cartUpdate","showRemoveProductButton","setRun","f","run","undefined","redirect","setRedirect","count","setCount","addToCart","cart","Array","from","Set","map","p","id","find","addItem","productId","i","updateItem","shouldRedirect","price","category","moment","createdAt","fromNow","quantity","showViewButton","showAddToCartBtn","splice","showRemoveButton","showCartUpdateOptions","Search","categories","search","results","searched","setData","useEffect","searchData","params","query","queryString","list","searchSubmit","e","searchMessage","onSubmit","c","key","placeholder","border","searchedProducts","Home","productsBySell","setProductsBySell","productsByArrival","setProductsByArrival","setError","PrivateRoute","Component","component","rest","render","props","state","Dashboard","AdminRoute","AdminDashboard","AddCategory","setName","setSuccess","token","userId","Authorization","createCategory","showSuccess","showError","autoFocus","required","AddProduct","shipping","photo","createdProduct","redirectToProfile","formData","init","FormData","files","set","createProduct","accept","RadioBox","prices","handleFilters","setValue","array","Checkbox","checked","setCheked","handleToggle","currentCategoryId","indexOf","newCheckedCategoryId","Shop","myFilters","setMyFilters","setCategories","setSkip","size","setSize","filteredResults","setFilteredResults","loadFilteredResults","filterBy","newFilters","priceValues","handlePrice","loadMore","toSkip","parseInt","Product","setProduct","relatedProduct","setRelatedProduct","loadSingleProduct","read","listRelated","match","substring","Checkout","products","reduce","currentValue","nextValue","Cart","items","setItems","showItems","Routes","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4741707d.chunk.js","sourcesContent":["export const API = process.env.REACT_APP_API_URL;","import { API } from '../config';\r\n\r\n\r\nexport const signin = user => {\r\n    return fetch(`${API}/signin`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n};\r\n\r\nexport const signup = user => {\r\n    return fetch(`${API}/signup`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n};\r\nexport const authenticate = (data, next) => {\r\n    if (typeof window !== 'undefined') {\r\n        localStorage.setItem('jwt', JSON.stringify(data));\r\n        next();\r\n    }\r\n};\r\n\r\nexport const signout = next => {\r\n    if (typeof window !== 'undefined') {\r\n        localStorage.removeItem('jwt');\r\n        next();\r\n        return fetch(`${API}/signout`, {\r\n            method: 'GET'\r\n        })\r\n            .then(response => {\r\n                console.log('signout', response);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n};\r\n\r\nexport const isAuthenticated = () => {\r\n    if (typeof window == 'undefined') {\r\n        return false;\r\n    }\r\n    if (localStorage.getItem('jwt')) {\r\n        return JSON.parse(localStorage.getItem('jwt'));\r\n    } else {\r\n        return false;\r\n    }\r\n};\r\n","import React,{Fragment} from 'react'\r\nimport { Link,withRouter} from 'react-router-dom'\r\nimport { signout, isAuthenticated } from \"../auth\";\r\nimport { itemTotal } from \"./cartHelpers\";\r\nconst isActive = (history, path) => {\r\n   if (history.location.pathname === path) {\r\n       return { color: \"#ff9900\" };\r\n   } else {\r\n       return { color: \"#ffffff\" };\r\n   }\r\n};\r\n\r\nconst Menu = ({ history}) => (\r\n    <div>\r\n        <ul className=\"nav nav-tabs bg-primary\">\r\n        <li className=\"nav-item\">\r\n        <Link \r\n              className=\"nav-link\" \r\n              style={isActive(history, \"/\")} \r\n              to=\"/\">HOME</Link>\r\n           </li>\r\n           <li className=\"nav-item\">\r\n                <Link\r\n                    className=\"nav-link\"\r\n                    style={isActive(history, \"/shop\")}\r\n                    to=\"/shop\"\r\n                >\r\n                    Shop\r\n                </Link>\r\n            </li>\r\n           {!isAuthenticated() && (\r\n                <Fragment>\r\n                    <li className=\"nav-item\">\r\n                        <Link\r\n                            className=\"nav-link\"\r\n                            style={isActive(history, \"/signin\")}\r\n                            to=\"/signin\"\r\n                        >\r\n                            Signin\r\n                        </Link>\r\n                    </li>\r\n\r\n                    <li className=\"nav-item\">\r\n                        <Link\r\n                            className=\"nav-link\"\r\n                            style={isActive(history, \"/signup\")}\r\n                            to=\"/signup\"\r\n                        >\r\n                            Signup\r\n                        </Link>\r\n                    </li>\r\n                </Fragment>\r\n            )}\r\n               <li className=\"nav-item\">\r\n                <Link\r\n                    className=\"nav-link\"\r\n                    style={isActive(history, \"/cart\")}\r\n                    to=\"/cart\"\r\n                  >\r\n                    Cart{\" \"}\r\n                    <sup>\r\n                        <small className=\"cart-badge\">{itemTotal()}</small>\r\n                    </sup>\r\n                </Link>\r\n            </li>\r\n            {isAuthenticated() && (\r\n                <li className=\"nav-item\">\r\n                    <span\r\n                        className=\"nav-link\"\r\n                        style={{ cursor: \"pointer\", color: \"#ffffff\" }}\r\n                        onClick={() =>\r\n                            signout(() => {\r\n                                history.push(\"/\");\r\n                            })\r\n                        }\r\n                    >\r\n                        Signout\r\n                    </span>\r\n                </li>\r\n            )}\r\n        </ul>\r\n   </div>\r\n); \r\nexport default withRouter(Menu);\r\n","export const addItem = (item = [], count = 0, next = f => f) => {\r\n    let cart = [];\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n        cart.push({\r\n            ...item,\r\n            count: 1\r\n        });\r\n\r\n        // remove duplicates\r\n        // build an Array from new Set and turn it back into array using Array.from\r\n        // so that later we can re-map it\r\n        // new set will only allow unique values in it\r\n        // so pass the ids of each object/product\r\n        // If the loop tries to add the same value again, it'll get ignored\r\n        // ...with the array of ids we got on when first map() was used\r\n        // run map() on it again and return the actual product from the cart\r\n\r\n        cart = Array.from(new Set(cart.map(p => p._id))).map(id => {\r\n            return cart.find(p => p._id === id);\r\n        });\r\n\r\n        localStorage.setItem('cart', JSON.stringify(cart));\r\n        next();\r\n    }\r\n};\r\n\r\nexport const itemTotal = () => {\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            return JSON.parse(localStorage.getItem('cart')).length;\r\n        }\r\n    }\r\n    return 0;\r\n};\r\n\r\nexport const getCart = () => {\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            return JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n    }\r\n    return [];\r\n};\r\n\r\nexport const updateItem = (productId, count) => {\r\n    let cart = [];\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n\r\n        cart.map((product, i) => {\r\n            if (product._id === productId) {\r\n                cart[i].count = count;\r\n            }\r\n        });\r\n\r\n        localStorage.setItem('cart', JSON.stringify(cart));\r\n    }\r\n};\r\n\r\nexport const removeItem = productId => {\r\n    let cart = [];\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n\r\n        cart.map((product, i) => {\r\n            if (product._id === productId) {\r\n                cart.splice(i, 1);\r\n            }\r\n        });\r\n\r\n        localStorage.setItem('cart', JSON.stringify(cart));\r\n    }\r\n    return cart;\r\n};\r\n\r\nexport const emptyCart = next => {\r\n    if (typeof window !== 'undefined') {\r\n        localStorage.removeItem('cart');\r\n        next();\r\n    }\r\n};\r\n","import React from \"react\";\r\nimport Menu from \"./Menu\";\r\nimport \"../styles.css\";\r\nconst Layout = ({\r\n    title = \"Title\",\r\n    description = \"Description\",\r\n    className,\r\n    children\r\n}) => (\r\n    <div>\r\n         <Menu />\r\n            <div className=\"jumbotron\">\r\n            <h2>{title}</h2>\r\n            <p className=\"lead\">{description}</p>\r\n        </div>\r\n        <div className={className}>{children}</div>\r\n    </div>\r\n);\r\nexport default Layout","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Layout from '../core/Layout';\r\nimport { signup } from '../auth';\r\n\r\nconst Signup = () => {\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        error: '',\r\n        success: false\r\n    });\r\n\r\n    const { name, email, password, success, error } = values;\r\n\r\n    const handleChange = name => event => {\r\n        setValues({ ...values, error: false, [name]: event.target.value });\r\n    };\r\n\r\n    const clickSubmit = event => {\r\n        event.preventDefault();\r\n        setValues({ ...values, error: false });\r\n        signup({ name, email, password }).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error, success: false });\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    name: '',\r\n                    email: '',\r\n                    password: '',\r\n                    error: '',\r\n                    success: true\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    const signUpForm = () => (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Email</label>\r\n                <input onChange={handleChange('email')} type=\"email\" className=\"form-control\" value={email} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Password</label>\r\n                <input onChange={handleChange('password')} type=\"password\" className=\"form-control\" value={password} />\r\n            </div>\r\n            <button onClick={clickSubmit} className=\"btn btn-primary\">\r\n                Submit\r\n            </button>\r\n        </form>\r\n    );\r\n\r\n    const showError = () => (\r\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const showSuccess = () => (\r\n        <div className=\"alert alert-info\" style={{ display: success ? '' : 'none' }}>\r\n            New account is created. Please <Link to=\"/signin\">Signin</Link>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Signup\"\r\n            description=\"Signup to Node React E-commerce App\"\r\n            className=\"container col-md-8 offset-md-2\"\r\n        >\r\n            {showSuccess()}\r\n            {showError()}\r\n            {signUpForm()}\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Signup;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, {useState} from \"react\";\r\n// import Layout from \"../core/Layout\";\r\n// import {API} from \"../config\";\r\n\r\n// const Signup = () => {\r\n//     const [values, setValues] = useState({\r\n//         name: '',\r\n//         email: '',\r\n//         password: '',\r\n//         error: '',\r\n//         success: false\r\n//     });\r\n\r\n//     const { name, email, password, success, error } = values;\r\n\r\n//     const handleChange = name => event => {\r\n//         setValues({ ...values, error: false, [name]: event.target.value });\r\n//     };\r\n\r\n//     const clickSubmit = event => {\r\n//         event.preventDefault();\r\n//         setValues({ ...values, error: false });\r\n//         signup({ name, email, password }).then(data => {\r\n//             if (data.error) {\r\n//                 setValues({ ...values, error: data.error, success: false });\r\n//             } else {\r\n//                 setValues({\r\n//                     ...values,\r\n//                     name: '',\r\n//                     email: '',\r\n//                     password: '',\r\n//                     error: '',\r\n//                     success: true\r\n//                 });\r\n//             }\r\n//         });\r\n//     };\r\n\r\n//     const signUpForm = () => (\r\n//         <form>\r\n//             <div className=\"form-group\">\r\n//                 <label className=\"text-muted\">Name</label>\r\n//                 <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name} />\r\n//             </div>\r\n\r\n//             <div className=\"form-group\">\r\n//                 <label className=\"text-muted\">Email</label>\r\n//                 <input onChange={handleChange('email')} type=\"email\" className=\"form-control\" value={email} />\r\n//             </div>\r\n\r\n//             <div className=\"form-group\">\r\n//                 <label className=\"text-muted\">Password</label>\r\n//                 <input onChange={handleChange('password')} type=\"password\" className=\"form-control\" value={password} />\r\n//             </div>\r\n//             <button onClick={clickSubmit} className=\"btn btn-primary\">\r\n//                 Submit\r\n//             </button>\r\n//         </form>\r\n//     );\r\n\r\n//     return(\r\n//      <Layout title=\"Signup Page\" description=\" ecom app\" className=\"container col-md-8 offset-md-2\">\r\n\r\n//    { signUpForm()}\r\n//      </Layout>);\r\n// }\r\n// export default Signup","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Layout from \"../core/Layout\";\r\nimport { signin, authenticate, isAuthenticated } from \"../auth\";\r\n\r\nconst Signin = () => {\r\n    const [values, setValues] = useState({\r\n        email: 'vibhu@gmail.com',\r\n        password: 'abc123',\r\n        error: '',\r\n        loading: false,\r\n        redirectToReferrer:false,\r\n    });\r\n\r\n    const { email, password, loading, error, redirectToReferrer } = values;\r\n    const { user } = isAuthenticated();\r\n\r\n    const handleChange = name => event => {\r\n        setValues({ ...values, error: false, [name]: event.target.value });\r\n    };\r\n\r\n    const clickSubmit = event => {\r\n        event.preventDefault();\r\n        setValues({ ...values, error: false, loading: true });\r\n        signin({ email, password }).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error, loading: false });\r\n            } else {\r\n                authenticate(data, () => {\r\n                    setValues({\r\n                        ...values,\r\n                        redirectToReferrer: true\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    const signUpForm = () => (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Email</label>\r\n                <input\r\n                    onChange={handleChange(\"email\")}\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    value={email}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Password</label>\r\n                <input\r\n                    onChange={handleChange(\"password\")}\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    value={password}\r\n                />\r\n            </div>\r\n            <button onClick={clickSubmit} className=\"btn btn-primary\">\r\n                Submit\r\n            </button>\r\n        </form>\r\n    );\r\n\r\n    const showError = () => (\r\n        <div\r\n            className=\"alert alert-danger\"\r\n            style={{ display: error ? \"\" : \"none\" }}\r\n        >\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const showLoading = () =>\r\n        loading && (\r\n            <div className=\"alert alert-info\">\r\n                <h2>Loading...</h2>\r\n            </div>\r\n        );\r\n\r\n    const redirectUser = () => {\r\n        if (redirectToReferrer) {\r\n            if (user && user.role === 1) {\r\n                return <Redirect to=\"/admin/dashboard\" />;\r\n            } else {\r\n                return <Redirect to=\"/user/dashboard\" />;\r\n            }\r\n        }\r\n        if (isAuthenticated()) {\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Signin\"\r\n            description=\"Signin to Node React E-commerce App\"\r\n            className=\"container col-md-8 offset-md-2\"\r\n        >\r\n            {showLoading()}\r\n            {showError()}\r\n            {signUpForm()}\r\n            {redirectUser()}\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Signin;\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import { Link ,Redirect} from 'react-router-dom';\r\n// import Layout from '../core/Layout';\r\n// import { signin, authenticate , isAuthenticated} from '../auth';\r\n\r\n// const Signin = () => {\r\n//     const [values, setValues] = useState({\r\n//         email: '9june@gmail.com',\r\n//         password: 'abc123',\r\n//         error: '',\r\n//         loading: false,\r\n//         redirectToReferrer:false,\r\n//     });\r\n\r\n//     const {  email, password, loading, error ,redirectToReferrer } = values;\r\n\r\n//     const handleChange = name => event => {\r\n//         setValues({ ...values, error: false, [name]: event.target.value });\r\n//     };\r\n\r\n//     const clickSubmit = event => {\r\n//         event.preventDefault();\r\n//         setValues({ ...values, error: false, loading: true });\r\n//         signin({ email, password }).then(data => {\r\n//             if (data.error) {\r\n//                 setValues({ ...values, error: data.error, loading: false });\r\n//             } else {\r\n//                 authenticate(data, () => {\r\n//                     setValues({\r\n//                         ...values,\r\n//                         redirectToReferrer: true\r\n//                     });\r\n//                 });\r\n//             }\r\n//         });\r\n//     };\r\n\r\n//     const signUpForm  = () => (\r\n//         <form>\r\n            \r\n//             <div className=\"form-group\">\r\n//                 <label className=\"text-muted\">Email</label>\r\n//                 <input onChange={handleChange('email')} type=\"email\" className=\"form-control\" value={email} />\r\n//             </div>\r\n\r\n//             <div className=\"form-group\">\r\n//                 <label className=\"text-muted\">Password</label>\r\n//                 <input onChange={handleChange('password')} type=\"password\" className=\"form-control\" value={password} />\r\n//             </div>\r\n//             <button onClick={clickSubmit} className=\"btn btn-primary\">\r\n//                 Submit\r\n//             </button>\r\n//         </form>\r\n//     );\r\n\r\n//     const showError = () => (\r\n//         <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\r\n//             {error}\r\n//         </div>\r\n//     );\r\n//     const showLoading = () =>\r\n//     loading && (\r\n//         <div className=\"alert alert-info\">\r\n//             <h2>Loading...</h2>\r\n//         </div>\r\n//     );\r\n//     const redirectUser = () => {\r\n//         if (redirectToReferrer) {\r\n//             if (user && user.role === 1) {\r\n//                 return <Redirect to=\"/admin/dashboard\" />;\r\n//             } else {\r\n//                 return <Redirect to=\"/user/dashboard\" />;\r\n//             }\r\n//         }\r\n//         if (isAuthenticated()) {\r\n//             return <Redirect to=\"/\" />;\r\n//         }\r\n//     };\r\n//     return (\r\n//         <Layout\r\n//             title=\"Signin\"\r\n//             description=\"Signin to Node React E-commerce App\"\r\n//             className=\"container col-md-8 offset-md-2\"\r\n//         >\r\n//             {showLoading()}\r\n//             {showError()}\r\n//             {signUpForm()}\r\n//             {redirectUser()}\r\n//         </Layout>\r\n//     );\r\n// };\r\n\r\n// export default Signin;\r\n\r\n\r\n\r\n\r\n// import React from \"react\";\r\n// import Layout from \"../core/Layout\";\r\n// import {API} from \"../config\";\r\n// const Signin=()=> (  <Layout title=\"Signin Page\" description=\" ecom app\">\r\n//       {API}\r\n//       </Layout>\r\n// );\r\n// export default Signin","import { API } from \"../config\";\r\nimport queryString from \"query-string\";\r\n\r\nexport const getProducts = sortBy => {\r\n    return fetch(`${API}/products?sortBy=${sortBy}&order=desc&limit=6`, {\r\n        method: \"GET\"\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\nexport const getCategories = () => {\r\n    return fetch(`${API}/categories`, {\r\n        method: \"GET\"\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n \r\nexport const getFilteredProducts = (skip, limit, filters = {}) => {\r\n    const data = {\r\n        limit,\r\n        skip,\r\n        filters\r\n    };\r\n    return fetch(`${API}/products/by/search`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(data)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n}; \r\nexport const list = params => {\r\n    const query = queryString.stringify(params);\r\n    console.log(\"query\", query);\r\n    return fetch(`${API}/products/search?${query}`, {\r\n        method: \"GET\"\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const read = productId => {\r\n    return fetch(`${API}/product/${productId}`, {\r\n        method: \"GET\"\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n \r\nexport const listRelated = productId => {\r\n    return fetch(`${API}/products/related/${productId}`, {\r\n        method: \"GET\"\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};","import React from \"react\";\r\nimport { API } from \"../config\";\r\n\r\nconst ShowImage = ({ item, url }) => (\r\n    <div className=\"product-img\">\r\n        <img\r\n            src={`${API}/${url}/photo/${item._id}`}\r\n            alt={item.name}\r\n            className=\"mb-3\"\r\n            style={{ maxHeight: \"100%\", maxWidth: \"100%\" }}\r\n        />\r\n    </div>\r\n);\r\n\r\nexport default ShowImage;\r\n","import React, { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport ShowImage from './ShowImage';\r\nimport moment from 'moment';\r\nimport { addItem, updateItem, removeItem } from './cartHelpers';\r\n\r\nconst Card = ({\r\n  product,\r\n  showViewProductButton = true,\r\n  showAddToCartButton = true,\r\n  cartUpdate = false,\r\n  showRemoveProductButton = false,\r\n  setRun = f => f,\r\n  run = undefined\r\n  // changeCartSize\r\n}) => {\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [count, setCount] = useState(product.count);\r\n\r\n  const showViewButton = showViewProductButton => {\r\n    return (\r\n      showViewProductButton && (\r\n        <Link to={`/product/${product._id}`} className=\"mr-2\">\r\n          <button className=\"btn btn-outline-primary mt-2 mb-2 card-btn-1\">View Product</button>\r\n        </Link>\r\n      )\r\n    );\r\n  };\r\n  const addToCart = () => {\r\n    // console.log('added');\r\n    addItem(product, setRedirect(true));\r\n  };\r\n\r\n  const shouldRedirect = redirect => {\r\n    if (redirect) {\r\n      return <Redirect to=\"/cart\" />;\r\n    }\r\n  };\r\n\r\n  const showAddToCartBtn = showAddToCartButton => {\r\n    return (\r\n      showAddToCartButton && (\r\n        <button onClick={addToCart} className=\"btn btn-outline-warning mt-2 mb-2 card-btn-1  \">\r\n          Add to cart\r\n        </button>\r\n      )\r\n    );\r\n  };\r\n\r\n  const showStock = quantity => {\r\n    return quantity > 0 ? (\r\n      <span className=\"badge badge-primary badge-pill\">In Stock </span>\r\n    ) : (\r\n      <span className=\"badge badge-primary badge-pill\">Out of Stock </span>\r\n    );\r\n  };\r\n\r\n  const handleChange = productId => event => {\r\n    setRun(!run); // run useEffect in parent Cart\r\n    setCount(event.target.value < 1 ? 1 : event.target.value);\r\n    if (event.target.value >= 1) {\r\n      updateItem(productId, event.target.value);\r\n    }\r\n  };\r\n\r\n  const showCartUpdateOptions = cartUpdate => {\r\n    return (\r\n      cartUpdate && (\r\n        <div>\r\n          <div className=\"input-group mb-3\">\r\n            <div className=\"input-group-prepend\">\r\n              <span className=\"input-group-text\">Adjust Quantity</span>\r\n            </div>\r\n            <input type=\"number\" className=\"form-control\" value={count} onChange={handleChange(product._id)} />\r\n          </div>\r\n        </div>\r\n      )\r\n    );\r\n  };\r\n  const showRemoveButton = showRemoveProductButton => {\r\n    return (\r\n      showRemoveProductButton && (\r\n        <button\r\n          onClick={() => {\r\n            removeItem(product._id);\r\n            setRun(!run); // run useEffect in parent Cart\r\n          }}\r\n          className=\"btn btn-outline-danger mt-2 mb-2\"\r\n        >\r\n          Remove Product\r\n        </button>\r\n      )\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"card \">\r\n      <div className=\"card-header card-header-1 \">{product.name}</div>\r\n      <div className=\"card-body\">\r\n        {shouldRedirect(redirect)}\r\n        <ShowImage item={product} url=\"product\" />\r\n        <p className=\"card-p  mt-2\">{product.description} </p>\r\n        <p className=\"card-p black-10\">₹ {product.price}</p>\r\n        <p className=\"black-9\">Category: {product.category && product.category.name}</p>\r\n        <p className=\"black-8\">Added {moment(product.createdAt).fromNow()}</p>\r\n        {showStock(product.quantity)}\r\n        <br />\r\n\r\n        {showViewButton(showViewProductButton)}\r\n\r\n        {showAddToCartBtn(showAddToCartButton)}\r\n\r\n        {showRemoveButton(showRemoveProductButton)}\r\n\r\n        {showCartUpdateOptions(cartUpdate)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n\r\n// import React, { useState } from 'react';\r\n// // import { Link, Redirect } from 'react-router-dom';\r\n// import { Link } from 'react-router-dom';\r\n// import ShowImage from './ShowImage';\r\n\r\n// const Card=({product})=>{\r\n//     return(\r\n//         <div className=\"col-4 mb-3\">\r\n//           <div className=\"card\">\r\n//           <div className=\"card-header \">{product.name}</div>\r\n//        <div className=\"card-body\">\r\n//           <ShowImage item={product} url=\"product\" />\r\n//           <p>{product.description}</p>\r\n//           <p>₹{product.price}</p>\r\n//           <Link to={`/product/${product._id}`} >\r\n//               <button className=\"btn btn-outline-primary mt-2 mb-2\">\r\n//                   View Product\r\n//               </button>\r\n//           </Link>\r\n//           <button className=\"btn btn-outline-warn mt-2 mb-2\">\r\n//                Add To Cart\r\n//               </button>\r\n//       </div>\r\n//         </div>\r\n//         </div>\r\n//     );\r\n// };\r\n// export default Card;\r\n// import moment from 'moment';\r\n// import { addItem, updateItem, removeItem } from './cartHelpers';\r\n\r\n// const Card = ({\r\n//   product,\r\n//   showViewProductButton = true,\r\n//   showAddToCartButton = true,\r\n//   cartUpdate = false,\r\n//   showRemoveProductButton = false,\r\n//   setRun = f => f,\r\n//   run = undefined\r\n//   // changeCartSize\r\n// }) => {\r\n//   const [redirect, setRedirect] = useState(false);\r\n//   const [count, setCount] = useState(product.count);\r\n\r\n//   const showViewButton = showViewProductButton => {\r\n//     return (\r\n//       showViewProductButton && (\r\n//         <Link to={`/product/${product._id}`} className=\"mr-2\">\r\n//           <button className=\"btn btn-outline-primary mt-2 mb-2 card-btn-1\">View Product</button>\r\n//         </Link>\r\n//       )\r\n//     );\r\n//   };\r\n//   return (\r\n// //     <div className=\"card \">\r\n// //       <div className=\"card-header card-header-1 \">{product.name}</div>\r\n//       <div className=\"card-body\">\r\n//         {/* {shouldRedirect(redirect)} */}\r\n//         <ShowImage item={product} url=\"product\" />\r\n//         <p className=\"card-p  mt-2\">{product.description.substring(0, 100)} </p>\r\n//         <p className=\"card-p black-10\">$ {product.price}</p>\r\n//         <p className=\"black-9\">Category: {product.category && product.category.name}</p>\r\n//         <p className=\"black-8\">Added on {moment(product.createdAt).fromNow()}</p>\r\n//         {showStock(product.quantity)}\r\n//         <br />\r\n\r\n//         {showViewButton(showViewProductButton)}\r\n\r\n//         {showAddToCartBtn(showAddToCartButton)}\r\n\r\n//         {showRemoveButton(showRemoveProductButton)}\r\n\r\n//         {showCartUpdateOptions(cartUpdate)}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };","// import React, { useState, useEffect } from \"react\";\r\n// import { getCategories, list } from \"./apiCore\";\r\n// import Card from \"./Card\";\r\n\r\n// const Search = () => {\r\n//     const [data, setData] = useState({\r\n//         categories: [],\r\n//         category: \"\",\r\n//         search: \"\",\r\n//         results: [],\r\n//         searched: false\r\n//     }); \r\n\r\n//     const { categories, category, search, results, searched } = data;\r\n\r\n//     const loadCategories = () => {\r\n//         getCategories().then(data => {\r\n//             if (data.error) {\r\n//                 console.log(data.error);\r\n//             } else {\r\n//                 setData({ ...data, categories: data });\r\n//             }\r\n//         });\r\n//     };\r\n\r\n//     useEffect(() => {\r\n//         loadCategories();\r\n//     }, []);\r\n\r\n//     const searchData = () => {\r\n//         // console.log(search, category);\r\n//         if (search) {\r\n//             list({ search: search || undefined, category: category }).then(\r\n//                 response => {\r\n//                     if (response.error) {\r\n//                         console.log(response.error);\r\n//                     } else {\r\n//                         setData({ ...data, results: response, searched: true });\r\n//                     }\r\n//                 }\r\n//             );\r\n//         }\r\n//     };\r\n\r\n//     const searchSubmit = e => {\r\n//         e.preventDefault();\r\n//         searchData();\r\n//     };\r\n\r\n//     const handleChange = name => event => {\r\n//         setData({ ...data, [name]: event.target.value, searched: false });\r\n//     };\r\n\r\n//     const searchMessage = (searched, results) => {\r\n//         if (searched && results.length > 0) {\r\n//             return `Found ${results.length} products`;\r\n//         }\r\n//         if (searched && results.length < 1) {\r\n//             return `No products found`;\r\n//         }\r\n//     };\r\n\r\n//     const searchedProducts = (results = []) => {\r\n//         return (\r\n//             <div>\r\n//                 <h2 className=\"mt-4 mb-4\">\r\n//                     {searchMessage(searched, results)}\r\n//                 </h2>\r\n\r\n//                 <div className=\"row\">\r\n//                     {results.map((product, i) => (\r\n//                         <div className=\"col-4 mb-3\">\r\n//                             <Card key={i} product={product} />\r\n//                         </div>\r\n//                     ))}\r\n//                 </div>\r\n//             </div>\r\n//         );\r\n//     };\r\n\r\n//     const searchForm = () => (\r\n//         <form onSubmit={searchSubmit}>\r\n//             <span className=\"input-group-text\">\r\n//                 <div className=\"input-group input-group-lg\">\r\n//                     <div className=\"input-group-prepend\">\r\n//                         <select\r\n//                             className=\"btn mr-2\"\r\n//                             onChange={handleChange(\"category\")}\r\n//                         >\r\n//                             <option value=\"All\">All</option>\r\n//                             {categories.map((c, i) => (\r\n//                                 <option key={i} value={c._id}>\r\n//                                     {c.name}\r\n//                                 </option>\r\n//                             ))}\r\n//                         </select>\r\n//                     </div>\r\n\r\n//                     <input\r\n//                         type=\"search\"\r\n//                         className=\"form-control\"\r\n//                         onChange={handleChange(\"search\")}\r\n//                         placeholder=\"Search by name\"\r\n//                     />\r\n//                 </div>\r\n//                 <div\r\n//                     className=\"btn input-group-append\"\r\n//                     style={{ border: \"none\" }}\r\n//                 >\r\n//                     <button className=\"input-group-text\">Search</button>\r\n//                 </div>\r\n//             </span>\r\n//         </form>\r\n//     );\r\n\r\n//     return (\r\n//         <div className=\"row\">\r\n//             <div className=\"container mb-3\">{searchForm()}</div>\r\n//             <div className=\"container-fluid mb-3\">\r\n//                 {searchedProducts(results)}\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Search;\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { getCategories, list } from \"./apiCore\";\r\nimport Card from \"./Card\";\r\n\r\nconst Search = () => {\r\n    const [data, setData] = useState({\r\n        categories: [],\r\n        category: \"\",\r\n        search: \"\",\r\n        results: [],\r\n        searched: false\r\n    });\r\n    const { categories, category, search, results, searched } = data;\r\n\r\n    const loadCategories = () => {\r\n        getCategories().then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n            } else {\r\n                setData({ ...data, categories: data });\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadCategories();\r\n    }, []);\r\n    const searchData = () => {\r\n        // console.log(search, category);\r\n        if (search) {\r\n            list({ search: search || undefined, category: category }).then(\r\n                response => {\r\n                    if (response.error) {\r\n                        console.log(response.error);\r\n                    } else {\r\n                        setData({ ...data, results: response, searched: true });\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    };\r\n    const searchSubmit = e => {\r\n        e.preventDefault();\r\n        searchData();\r\n    };\r\n\r\n    const handleChange = name => event => {\r\n        setData({ ...data, [name]: event.target.value, searched: false });\r\n    };\r\n\r\n    const searchMessage = (searched, results) => {\r\n        if (searched && results.length > 0) {\r\n            return `Found ${results.length} products`;\r\n        }\r\n        if (searched && results.length < 1) {\r\n            return `No products found`;\r\n        }\r\n    };\r\n    const searchedProducts = (results = []) => {\r\n                return (\r\n                    <div>\r\n                        <h2 className=\"mt-4 mb-4\">\r\n                            {searchMessage(searched, results)}\r\n                        </h2>\r\n        \r\n                        <div className=\"row\">\r\n                            {results.map((product, i) => (\r\n                                <div className=\"col-4 mb-3\">\r\n                                    <Card key={i} product={product} />\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                );\r\n            };\r\n    const searchForm = () => (\r\n        <form onSubmit={searchSubmit}>\r\n            <span className=\"input-group-text\">\r\n                <div className=\"input-group input-group-lg\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <select\r\n                            className=\"btn mr-2\"\r\n                            onChange={handleChange(\"category\")}\r\n                        >\r\n                            <option value=\"All\">All</option>\r\n                            {categories.map((c, i) => (\r\n                                <option key={i} value={c._id}>\r\n                                    {c.name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <input\r\n                        type=\"search\"\r\n                        className=\"form-control\"\r\n                        onChange={handleChange(\"search\")}\r\n                        placeholder=\"Search by name\"\r\n                    />\r\n                </div>\r\n                <div\r\n                    className=\"btn input-group-append\"\r\n                    style={{ border: \"none\" }}\r\n                >\r\n                    <button className=\"input-group-text\">Search</button>\r\n                </div>\r\n            </span>\r\n        </form>\r\n    );\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"container mb-3\">{searchForm()}</div>\r\n            <div className=\"container-fluid mb-3\">\r\n                {searchedProducts(results)}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Layout from './Layout';\r\nimport { getProducts } from './apiCore';\r\nimport Card from './Card';\r\nimport Search from './Search';\r\nconst Home = () => {\r\n    const [productsBySell, setProductsBySell] = useState([])\r\n    const [productsByArrival, setProductsByArrival] = useState([])\r\n    const [error, setError] = useState(false)\r\n\r\n    const loadProductsBySell = () => {\r\n        getProducts('sold').then(data => {\r\n            if (data.error) {\r\n                setError(data.error)\r\n            } else {\r\n                setProductsBySell(data)\r\n            }\r\n        });\r\n    };\r\n     \r\n    const loadProductsByArrival = () => {\r\n        getProducts('createdAt').then(data => {\r\n            console.log(data);\r\n            if (data.error) {\r\n                setError(data.error)\r\n            } else {\r\n                setProductsByArrival(data)\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadProductsByArrival()\r\n        loadProductsBySell()\r\n    }, [])\r\n    return (\r\n        <Layout\r\n            title=\"PILLAI CREATIONS\"\r\n            description=\"LUMINOUS IMAGINATIONS\"\r\n           \r\n        > <Search />\r\n            <h2 className=\"mb-4\">BEST SELLERS</h2>\r\n            <div className=\"row\">\r\n                {productsBySell.map((product, i) => (\r\n                  <div key={i} className=\"col-4 mb-3\">\r\n                  <Card product={product} />\r\n                  </div>\r\n                ))}\r\n                </div>\r\n\r\n                <h2 className=\"mb-4\">New Arrivals</h2>\r\n            <div className=\"row\">\r\n                {productsByArrival.map((product, i) => (\r\n                     <div key={i} className=\"col-4 mb-3\">\r\n                     <Card product={product} />\r\n                     </div>\r\n                ))}\r\n                </div>\r\n        {/* {JSON.stringify(productsByArrival)}\r\n        <hr/>\r\n        {JSON.stringify(productsBySell)}\r\n            <Search /> */}\r\n            {/* <h2 className=\"mb-4\">New Arrivals</h2>\r\n            <div className=\"row\">\r\n                {productsByArrival.map((product, i) => (\r\n                    <div key={i} className=\"col-4 mb-3\">\r\n                        <Card product={product} />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <h2 className=\"mb-4\">Best Sellers</h2>\r\n            <div className=\"row\">\r\n                {productsBySell.map((product, i) => (\r\n                    <div key={i} className=\"col-4 mb-3\">\r\n                        <Card product={product} />\r\n                    </div>\r\n                ))}\r\n            </div> */}\r\n        </Layout>\r\n    );\r\n};\r\nexport default Home ","import React, { Component } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"./index\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            isAuthenticated() ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect\r\n                    to={{\r\n                        pathname: \"/signin\",\r\n                        state: { from: props.location }\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nexport default PrivateRoute;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../core/Layout\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { Link } from \"react-router-dom\";\r\n//import { getPurchaseHistory } from \"./apiUser\";\r\n//import moment from \"moment\";\r\n\r\nconst Dashboard = () => {\r\n   // const [history, setHistory] = useState([]);\r\n\r\n    const {\r\n        user: { _id, name, email, role }\r\n    } = isAuthenticated();\r\n   // const token = isAuthenticated().token;\r\n\r\n    // const init = (userId, token) => {\r\n    //     getPurchaseHistory(userId, token).then(data => {\r\n    //         if (data.error) {\r\n    //             console.log(data.error);\r\n    //         } else {\r\n    //             setHistory(data);\r\n    //         }\r\n    //     });\r\n    // };\r\n\r\n    // useEffect(() => {\r\n    //     init(_id, token);\r\n    // }, []);\r\n\r\n    const userLinks = () => {\r\n        return (\r\n            <div className=\"card\">\r\n                <h4 className=\"card-header\">User Links</h4>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/cart\">\r\n                            My Cart\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        {/* <Link className=\"nav-link\" to={`/profile/${_id}`}> */}\r\n                        <Link className=\"nav-link\" to={\"/profile/update\"}>\r\n                            Update Profile\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const userInfo = () => {\r\n        return (\r\n            <div className=\"card mb-5\">\r\n                <h3 className=\"card-header\">User Information</h3>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">{name}</li>\r\n                    <li className=\"list-group-item\">{email}</li>\r\n                    <li className=\"list-group-item\">\r\n                        {role === 1 ? \"Admin\" : \"Registered User\"}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const purchaseHistory = history => {\r\n        return (\r\n            <div className=\"card mb-5\">\r\n                <h3 className=\"card-header\">Purchase history</h3>\r\n                <ul className=\"list-group\">\r\n                    {/* <li className=\"list-group-item\">\r\n                        {history.map((h, i) => {\r\n                            return (\r\n                                <div>\r\n                                    <hr />\r\n                                    {h.products.map((p, i) => {\r\n                                        return (\r\n                                            <div key={i}>\r\n                                                <h6>Product name: {p.name}</h6>\r\n                                                <h6>\r\n                                                    Product price: ${p.price}\r\n                                                </h6>\r\n                                                <h6>\r\n                                                    Purchased date:{\" \"}\r\n                                                    {moment(\r\n                                                        p.createdAt\r\n                                                    ).fromNow()}\r\n                                                </h6>\r\n                                            </div>\r\n                                        );\r\n                                    })}\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </li> */}\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Dashboard\"\r\n            description={`G'day ${name}!`}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">{userLinks()}</div>\r\n                <div className=\"col-9\">\r\n                    {/* {userInfo()}\r\n                    {purchaseHistory(history)} */}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import Layout from \"../core/Layout\";\r\n// import { isAuthenticated } from \"../auth\";\r\n// import { Link } from \"react-router-dom\";\r\n// import { getPurchaseHistory } from \"./apiUser\";\r\n// import moment from \"moment\";\r\n\r\n// const Dashboard = () => {\r\n//     const [history, setHistory] = useState([]);\r\n\r\n//     const {\r\n//         user: { _id, name, email, role }\r\n//     } = isAuthenticated();\r\n//     const token = isAuthenticated().token;\r\n\r\n//     const init = (userId, token) => {\r\n//         getPurchaseHistory(userId, token).then(data => {\r\n//             if (data.error) {\r\n//                 console.log(data.error);\r\n//             } else {\r\n//                 setHistory(data);\r\n//             }\r\n//         });\r\n//     };\r\n\r\n//     useEffect(() => {\r\n//         init(_id, token);\r\n//     }, []);\r\n\r\n//     const userLinks = () => {\r\n//         return (\r\n//             <div className=\"card\">\r\n//                 <h4 className=\"card-header\">User Links</h4>\r\n//                 <ul className=\"list-group\">\r\n//                     <li className=\"list-group-item\">\r\n//                         <Link className=\"nav-link\" to=\"/cart\">\r\n//                             My Cart\r\n//                         </Link>\r\n//                     </li>\r\n//                     <li className=\"list-group-item\">\r\n//                         <Link className=\"nav-link\" to={`/profile/${_id}`}>\r\n//                             Update Profile\r\n//                         </Link>\r\n//                     </li>\r\n//                 </ul>\r\n//             </div>\r\n//         );\r\n//     };\r\n\r\n//     const userInfo = () => {\r\n//         return (\r\n//             <div className=\"card mb-5\">\r\n//                 <h3 className=\"card-header\">User Information</h3>\r\n//                 <ul className=\"list-group\">\r\n//                     <li className=\"list-group-item\">{name}</li>\r\n//                     <li className=\"list-group-item\">{email}</li>\r\n//                     <li className=\"list-group-item\">\r\n//                         {role === 1 ? \"Admin\" : \"Registered User\"}\r\n//                     </li>\r\n//                 </ul>\r\n//             </div>\r\n//         );\r\n//     };\r\n\r\n//     const purchaseHistory = history => {\r\n//         return (\r\n//             <div className=\"card mb-5\">\r\n//                 <h3 className=\"card-header\">Purchase history</h3>\r\n//                 <ul className=\"list-group\">\r\n//                     <li className=\"list-group-item\">\r\n//                         {history.map((h, i) => {\r\n//                             return (\r\n//                                 <div>\r\n//                                     <hr />\r\n//                                     {h.products.map((p, i) => {\r\n//                                         return (\r\n//                                             <div key={i}>\r\n//                                                 <h6>Product name: {p.name}</h6>\r\n//                                                 <h6>\r\n//                                                     Product price: ${p.price}\r\n//                                                 </h6>\r\n//                                                 <h6>\r\n//                                                     Purchased date:{\" \"}\r\n//                                                     {moment(\r\n//                                                         p.createdAt\r\n//                                                     ).fromNow()}\r\n//                                                 </h6>\r\n//                                             </div>\r\n//                                         );\r\n//                                     })}\r\n//                                 </div>\r\n//                             );\r\n//                         })}\r\n//                     </li>\r\n//                 </ul>\r\n//             </div>\r\n//         );\r\n//     };\r\n\r\n//     return (\r\n//         <Layout\r\n//             title=\"Dashboard\"\r\n//             description={`G'day ${name}!`}\r\n//             className=\"container-fluid\"\r\n//         >\r\n//             <div className=\"row\">\r\n//                 <div className=\"col-3\">{userLinks()}</div>\r\n//                 <div className=\"col-9\">\r\n//                     {userInfo()}\r\n//                     {purchaseHistory(history)}\r\n//                 </div>\r\n//             </div>\r\n//         </Layout>\r\n//     );\r\n// };\r\n\r\n// export default Dashboard;\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import Layout from \"../core/Layout\";\r\n// import { isAuthenticated } from \"../auth\";\r\n// import{Link} from 'react';\r\n// const Dashboard = () => {\r\n//     return(\r\n//         const {\r\n//             user: { _id, name, email, role }\r\n//         } = isAuthenticated();\r\n\r\n//     )","import React, { Component } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"./index\";\r\n\r\nconst AdminRoute = ({ component: Component, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            isAuthenticated() && isAuthenticated().user.role === 1 ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect\r\n                    to={{\r\n                        pathname: \"/signin\",\r\n                        state: { from: props.location }\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nexport default AdminRoute;\r\n","import React from \"react\";\r\nimport Layout from \"../core/Layout\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst AdminDashboard = () => {\r\n    const {\r\n        user: { _id, name, email, role }\r\n    } = isAuthenticated();\r\n\r\n    const adminLinks = () => {\r\n        return (\r\n            <div className=\"card\">\r\n                <h4 className=\"card-header\">Admin Links</h4>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/create/category\">\r\n                            Create Category\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/create/product\">\r\n                            Create Product\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/admin/orders\">\r\n                            View Orders\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/admin/products\">\r\n                            Manage Products\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const adminInfo = () => {\r\n        return (\r\n            <div className=\"card mb-5\">\r\n                <h3 className=\"card-header\">User Information</h3>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">{name}</li>\r\n                    <li className=\"list-group-item\">{email}</li>\r\n                    <li className=\"list-group-item\">\r\n                        {role === 1 ? \"Admin\" : \"Registered User\"}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Dashboard\"\r\n            description={`G'day ${name}!`}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">{adminLinks()}</div>\r\n                <div className=\"col-9\">{adminInfo()}</div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default AdminDashboard;","import React, { useState } from \"react\";\r\nimport Layout from \"../core/Layout\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createCategory } from \"./apiAdmin\";\r\n\r\nconst AddCategory = () => {\r\n    const [name, setName] = useState(\"\");\r\n    const [error, setError] = useState(false);\r\n    const [success, setSuccess] = useState(false);\r\n\r\n    // destructure user and token from localstorage\r\n    const { user, token } = isAuthenticated();\r\n\r\n    const handleChange = e => {\r\n        setError(\"\");\r\n        setName(e.target.value);\r\n    };\r\n\r\n    const clickSubmit = e => {\r\n        e.preventDefault();\r\n        setError(\"\");\r\n        setSuccess(false);\r\n        // make request to api to create category\r\n        createCategory(user._id, token, { name }).then(data => {\r\n            if (data.error) {\r\n                setError(data.error);\r\n            } else {\r\n                setError(\"\");\r\n                setSuccess(true);\r\n            }\r\n        });\r\n    };\r\n\r\n    const newCategoryFom = () => (\r\n        <form onSubmit={clickSubmit}>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={handleChange}\r\n                    value={name}\r\n                    autoFocus\r\n                    required\r\n                />\r\n            </div>\r\n            <button className=\"btn btn-outline-primary\">Create Category</button>\r\n        </form>\r\n    );\r\n\r\n    const showSuccess = () => {\r\n        if (success) {\r\n            return <h3 className=\"text-success\">{name} is created</h3>;\r\n        }\r\n    };\r\n\r\n    const showError = () => {\r\n        if (error) {\r\n            return <h3 className=\"text-danger\">Category should be unique</h3>;\r\n        }\r\n    };\r\n\r\n    const goBack = () => (\r\n        <div className=\"mt-5\">\r\n            <Link to=\"/admin/dashboard\" className=\"text-warning\">\r\n                Back to Dashboard\r\n            </Link>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Add a new category\"\r\n            description={`G'day ${user.name}, ready to add a new category?`}\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {showSuccess()}\r\n                    {showError()}\r\n                    {newCategoryFom()}\r\n                    {goBack()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default AddCategory;\r\n","import { API } from '../config';\r\n\r\nexport const createCategory = (userId, token, category) => {\r\n    return fetch(`${API}/category/create/${userId}`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(category)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n};\r\n\r\nexport const createProduct = (userId, token, product) => {\r\n    return fetch(`${API}/product/create/${userId}`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: product\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n};\r\n\r\nexport const getCategories = () => {\r\n    return fetch(`${API}/categories`, {\r\n        method: 'GET'\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport Layout from '../core/Layout';\r\nimport { isAuthenticated } from '../auth';\r\nimport { Link } from 'react-router-dom';\r\nimport { createProduct, getCategories } from './apiAdmin';\r\n//import { createProduct} from './apiAdmin';\r\nconst AddProduct = () => {\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        description: '',\r\n        price: '',\r\n        categories: [],\r\n        category: '',\r\n        shipping: '',\r\n        quantity: '',\r\n        photo: '',\r\n        loading: false,\r\n        error: '',\r\n        createdProduct: '',\r\n        redirectToProfile: false,\r\n        formData: ''\r\n    });\r\n\r\n    const { user, token } = isAuthenticated();\r\n    const {\r\n        name,\r\n        description,\r\n        price,\r\n        categories,\r\n        category,\r\n        shipping,\r\n        quantity,\r\n        loading,\r\n        error,\r\n        createdProduct,\r\n        redirectToProfile,\r\n        formData\r\n    } = values;\r\n\r\n    //load categories and set form data\r\n    const init = () => {\r\n        getCategories().then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error });\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    categories: data,\r\n                    formData: new FormData()\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        init();\r\n    }, []);\r\n\r\n    const handleChange = name => event => {\r\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\r\n        formData.set(name, value);\r\n        setValues({ ...values, [name]: value });\r\n    };\r\n\r\n    const clickSubmit = event => {\r\n        event.preventDefault();\r\n        setValues({ ...values, error: '', loading: true });\r\n\r\n        createProduct(user._id, token, formData).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error });\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    name: '',\r\n                    description: '',\r\n                    photo: '',\r\n                    price: '',\r\n                    quantity: '',\r\n                    loading: false,\r\n                    createdProduct: data.name\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    const newPostForm = () => (\r\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\r\n            <h4>Post Photo</h4>\r\n            <div className=\"form-group\">\r\n                <label className=\"btn btn-secondary\">\r\n                    <input onChange={handleChange('photo')} type=\"file\" name=\"photo\" accept=\"image/*\" />\r\n                </label>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Description</label>\r\n                <textarea onChange={handleChange('description')} className=\"form-control\" value={description} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Price</label>\r\n                <input onChange={handleChange('price')} type=\"number\" className=\"form-control\" value={price} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Category</label>\r\n                <select onChange={handleChange('category')} className=\"form-control\">\r\n                    <option>Please select</option>\r\n                    {categories &&\r\n                        categories.map((c, i) => (\r\n                            <option key={i} value={c._id}>\r\n                                {c.name}\r\n                            </option>\r\n                        ))}\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Shipping</label>\r\n                <select onChange={handleChange('shipping')} className=\"form-control\">\r\n                    <option>Please select</option>\r\n                    <option value=\"0\">No</option>\r\n                    <option value=\"1\">Yes</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Quantity</label>\r\n                <input onChange={handleChange('quantity')} type=\"number\" className=\"form-control\" value={quantity} />\r\n            </div>\r\n\r\n            <button className=\"btn btn-outline-primary\">Create Product</button>\r\n        </form>\r\n    );\r\n\r\n    const showError = () => (\r\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const showSuccess = () => (\r\n        <div className=\"alert alert-info\" style={{ display: createdProduct ? '' : 'none' }}>\r\n            <h2>{`${createdProduct}`} is created!</h2>\r\n        </div>\r\n    );\r\n\r\n    const showLoading = () =>\r\n        loading && (\r\n            <div className=\"alert alert-success\">\r\n                <h2>Loading...</h2>\r\n            </div>\r\n        );\r\n\r\n    return (\r\n        <Layout title=\"Add a new product\" description={`G'day ${user.name}, ready to add a new product?`}>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {showLoading()}\r\n                    {showSuccess()}\r\n                    {showError()}\r\n                    {newPostForm()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default AddProduct;\r\n","import React, { useState } from \"react\";\r\n\r\nconst RadioBox = ({ prices, handleFilters }) => {\r\n    const [value, setValue] = useState(0);\r\n\r\n    const handleChange = event => {\r\n        handleFilters(event.target.value);\r\n        setValue(event.target.value);\r\n    };\r\n\r\n    return prices.map((p, i) => (\r\n        <div key={i}>\r\n            <input\r\n                onChange={handleChange}\r\n                value={`${p._id}`}\r\n                name={p}\r\n                type=\"radio\"\r\n                className=\"mr-2 ml-4\"\r\n            />\r\n            <label className=\"form-check-label\">{p.name}</label>\r\n        </div>\r\n    ));\r\n};\r\n\r\nexport default RadioBox;\r\n","export const prices = [\r\n    {\r\n        _id: 0,\r\n        name: \"Any\",\r\n        array: []\r\n    },\r\n    {\r\n        _id: 1,\r\n        name: \"₹1 to ₹100\",\r\n        array: [1, 100]\r\n    },\r\n    {\r\n        _id: 2,\r\n        name: \"₹101 to 500\",\r\n        array: [101, 500]\r\n    },\r\n    {\r\n        _id: 3,\r\n        name: \"₹501 to ₹1000\",\r\n        array: [501, 1000]\r\n    },\r\n    {\r\n        _id: 4,\r\n        name: \"₹1001 to ₹5000\",\r\n        array: [1001, 5000]\r\n    },\r\n    {\r\n        _id: 5,\r\n        name: \"More than ₹5000\",\r\n        array: [5000, 100000]\r\n    }\r\n];\r\n","import React, { useState } from \"react\";\r\n const Checkbox= ({ categories , handleFilters} )=>{\r\n    const [checked, setCheked] = useState([]);\r\n    const handleToggle = c => () => {    //higher order function\r\n        // return the first index or -1\r\n        const currentCategoryId = checked.indexOf(c);\r\n        const newCheckedCategoryId = [...checked];\r\n        // if currently checked was not already in checked state > push\r\n        // else pull/take off\r\n        if (currentCategoryId === -1) {\r\n            newCheckedCategoryId.push(c);\r\n        } else {\r\n            newCheckedCategoryId.splice(currentCategoryId, 1);\r\n        }\r\n        console.log(newCheckedCategoryId);\r\n        setCheked(newCheckedCategoryId);\r\n        handleFilters(newCheckedCategoryId);\r\n    };\r\n\r\n    return categories.map((c, i) => (\r\n        <li key={i} className=\"list-unstyled\">\r\n            <input\r\n                onChange={handleToggle(c._id)}\r\n                value={checked.indexOf(c._id === -1)}\r\n                type=\"checkbox\"\r\n                className=\"form-check-input\"\r\n            />\r\n            <label className=\"form-check-label\">{c.name}</label>\r\n        </li>\r\n    ));\r\n};\r\n\r\n export default Checkbox;\r\n ","import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"./Layout\";\r\nimport Card from \"./Card\";\r\nimport { getCategories, getFilteredProducts } from \"./apiCore\";\r\nimport RadioBox from \"./RadioBox\";\r\nimport { prices } from \"./fixedPrices\";\r\nimport Checkbox from \"./Checkbox\";\r\nconst Shop = () => {\r\n    const [myFilters, setMyFilters] = useState({\r\n        filters: { category: [], price: [] }\r\n    });\r\n    const [categories, setCategories] = useState([]);\r\n    const [error, setError] = useState(false);\r\n    const [limit, setLimit] = useState(6);\r\n    const [skip, setSkip] = useState(0);\r\n    const [size, setSize] = useState(0);\r\n    const [filteredResults, setFilteredResults] = useState([]);\r\n   \r\n    const init = () => {\r\n        getCategories().then(data => {\r\n            if (data.error) {\r\n                setError(data.error);\r\n            } else {\r\n                setCategories(data);\r\n            }\r\n        }); \r\n    }; \r\n    \r\n    useEffect(() => {\r\n        init();\r\n        loadFilteredResults(skip, limit, myFilters.filters);\r\n    }, []);\r\n\r\n    const handleFilters = (filters, filterBy) => {\r\n        // console.log(\"SHOP\", filters, filterBy);\r\n        const newFilters = { ...myFilters };\r\n        newFilters.filters[filterBy] = filters;\r\n\r\n        if (filterBy === \"price\") {\r\n            let priceValues = handlePrice(filters);\r\n            newFilters.filters[filterBy] = priceValues;\r\n        }\r\n        loadFilteredResults(myFilters.filters);\r\n        setMyFilters(newFilters);\r\n    };\r\n\r\n    const loadFilteredResults = newFilters => {\r\n        // console.log(newFilters);\r\n        getFilteredProducts(skip, limit, newFilters).then(data => {\r\n            if (data.error) {\r\n                setError(data.error);\r\n            } else {\r\n                setFilteredResults(data.data);\r\n                setSize(data.size);\r\n                setSkip(0);\r\n            }\r\n        });\r\n    };\r\n\r\n    const loadMore = () => {\r\n        let toSkip = skip + limit;\r\n        // console.log(newFilters);\r\n        getFilteredProducts(toSkip, limit, myFilters.filters).then(data => {\r\n            if (data.error) {\r\n                setError(data.error);\r\n            } else {\r\n                setFilteredResults([...filteredResults, ...data.data]);\r\n                setSize(data.size);\r\n                setSkip(toSkip);\r\n            }\r\n        });\r\n    };\r\n\r\n const loadMoreButton = () => {\r\n        return (\r\n            size > 0 &&\r\n            size >= limit && (\r\n                <button onClick={loadMore} className=\"btn btn-warning mb-5\">\r\n                    Load more\r\n                </button>\r\n            )\r\n        );\r\n    };\r\n\r\n    const handlePrice = value => {\r\n        const data = prices;\r\n        let array = [];\r\n\r\n        for (let key in data) {\r\n            if (data[key]._id === parseInt(value)) {\r\n                array = data[key].array;\r\n            }\r\n        }\r\n        return array;\r\n    };\r\n\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Shop Page\"\r\n            description=\"Search and find books of your choice\"\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-4\">\r\n                    <h4>Filter by categories</h4>\r\n                    <ul>\r\n                        <Checkbox\r\n                            categories={categories}\r\n                            handleFilters={filters =>\r\n                            handleFilters(filters, \"category\")\r\n                            }\r\n                        />\r\n                    </ul>\r\n\r\n                    <h4>Filter by price range</h4>\r\n                    <div>\r\n                        <RadioBox\r\n                            prices={prices}\r\n                            handleFilters={filters =>\r\n                                handleFilters(filters, \"price\")\r\n                            }\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-8\">\r\n                    <h2 className=\"mb-4\">Products</h2>\r\n                    <div className=\"row\">\r\n                        {filteredResults.map((product, i) => (\r\n                            <div key={i} className=\"col-4 mb-3\">\r\n                            <Card product={product} />\r\n                        </div>\r\n                        ))}\r\n                    </div>\r\n                    <hr />\r\n                    {loadMoreButton()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Shop;\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport Layout from './Layout';\r\nimport { read, listRelated } from './apiCore';\r\nimport Card from './Card';\r\n\r\nconst Product = props => {\r\n    const [product, setProduct] = useState({});\r\n    const [relatedProduct, setRelatedProduct] = useState([]);\r\n    const [error, setError] = useState(false);\r\n\r\n    const loadSingleProduct = productId => {\r\n        read(productId).then(data => {\r\n            if (data.error) {\r\n                setError(data.error);\r\n            } else {\r\n                setProduct(data);\r\n                // fetch related products\r\n                listRelated(data._id).then(data => {\r\n                    if (data.error) {\r\n                        setError(data.error);\r\n                    } else {\r\n                        setRelatedProduct(data);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        const productId = props.match.params.productId;\r\n        loadSingleProduct(productId);\r\n    }, [props]);\r\n\r\n    return (\r\n        <Layout\r\n            title={product && product.name}\r\n            description={product && product.description && product.description.substring(0, 100)}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-8\">\r\n                    {product && product.description && <Card product={product} showViewProductButton={false} />}\r\n                </div>\r\n\r\n                <div className=\"col-4\">\r\n                    <h4>Related products</h4>\r\n                    {relatedProduct.map((p, i) => (\r\n                        <div className=\"mb-3\" key={i}>\r\n                            <Card product={p} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Product;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { getProducts, getBraintreeClientToken, processPayment, createOrder } from './apiCore';\r\nimport { emptyCart } from './cartHelpers';\r\nimport Card from './Card';\r\nimport { isAuthenticated } from '../auth';\r\nimport { Link } from 'react-router-dom';\r\n// // import \"braintree-web\"; // not using this package\r\n// import DropIn from 'braintree-web-drop-in-react';\r\n  \r\nconst Checkout=({products})=>{\r\n//  return<div>{JSON.stringify(products)}</div>\r\n const getTotal = () => {\r\n    return products.reduce((currentValue, nextValue) => {\r\n        return currentValue + nextValue.count * nextValue.price;\r\n    }, 0);\r\n};\r\nconst showCheckout = () => {\r\n    return isAuthenticated() ? (\r\n     //   <div>{showDropIn()}</div>\r\n     <button className=\" btn btn-success\">Checkout</button>\r\n    ) : (\r\n        <Link to=\"/signin\">\r\n            <button className=\"btn btn-primary\">Sign in to checkout</button>\r\n        </Link>\r\n    );\r\n};\r\nreturn (\r\n    <div>\r\n        <h2>Total:₹ {getTotal()}</h2>\r\n        {/* {showLoading(data.loading)}\r\n        {showSuccess(data.success)}\r\n        {showError(data.error)}*/}\r\n        {showCheckout()} \r\n    </div>\r\n);\r\n\r\n}\r\nexport default Checkout","import React, { useState, useEffect } from 'react';\r\nimport Layout from './Layout';\r\nimport { Link } from 'react-router-dom';\r\nimport { getCart } from './cartHelpers';\r\nimport Card from './Card';\r\nimport Checkout from './Checkout';\r\n \r\nconst Cart = () => {\r\n  const [items, setItems] = useState([]);\r\n  // const [cartSize, setCartSize] = useState([]);\r\n  const [run, setRun] = useState(false);\r\n \r\n  useEffect(() => {\r\n    console.log('MAX DEPTH ...');\r\n    setItems(getCart());\r\n  }, [run]);\r\n \r\n  const showItems = items => {\r\n    return (\r\n      <div>\r\n        <h2>Your cart has {`${items.length}`} items</h2>\r\n        <hr />\r\n        {items.map((product, i) => (\r\n          <Card\r\n            key={i}\r\n            product={product}\r\n            showAddToCartButton={false}\r\n            cartUpdate={true}\r\n            showRemoveProductButton={true}\r\n            setRun={setRun}\r\n            run={run}\r\n            // changeCartSize={changeCartSize}\r\n          />\r\n        ))}\r\n      </div>\r\n    ); \r\n  };\r\n \r\n  const noItemsMessage = () => (\r\n    <h2>\r\n      Your Cart is empty. <br />\r\n      <Link to=\"/shop\"> Continue shopping. </Link>\r\n    </h2>\r\n  );\r\n \r\n  return (\r\n    <Layout title=\"Shopping Cart\" description=\"Checkout now!\" className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-6\">{items.length > 0 ? showItems(items) : noItemsMessage()}</div>\r\n        <div className=\"col-6\">\r\n          <h2 className=\"mb-4\">Your Cart Summary</h2>\r\n          <hr />\r\n          <Checkout products={items} />\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n \r\nexport default Cart;","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport Signup from './user/Signup';\r\nimport Signin from './user/Signin';\r\nimport Home from './core/Home';\r\nimport PrivateRoute from './auth/PrivateRoute';\r\nimport Dashboard from './user/UserDashboard';\r\nimport AdminRoute from './auth/AdminRoute';\r\nimport AdminDashboard from './user/AdminDashboard';\r\nimport AddCategory from './admin/AddCategory';\r\nimport AddProduct from './admin/AddProduct';\r\nimport Shop from './core/Shop';\r\nimport Product from './core/Product';\r\nimport Cart from './core/Cart';\r\n// import Orders from './admin/Orders';\r\n// import Profile from './user/Profile';\r\n// import ManageProducts from './admin/ManageProducts';\r\n// import UpdateProduct from './admin/UpdateProduct';\r\n// import UpdateCategory from './admin/updateCategory';\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route path=\"/\" exact component={Home} />\r\n                <Route path=\"/shop\" exact component={Shop} />\r\n                <Route path=\"/signin\" exact component={Signin} />\r\n                <Route path=\"/signup\" exact component={Signup} />\r\n                <PrivateRoute path=\"/user/dashboard\" exact component={Dashboard} />\r\n                <AdminRoute path=\"/admin/dashboard\" exact component={AdminDashboard} />\r\n                <AdminRoute path=\"/create/category\" exact component={AddCategory} />\r\n                <AdminRoute path=\"/create/product\" exact component={AddProduct} />\r\n                <Route path=\"/product/:productId\" exact component={Product} />\r\n                <Route path=\"/cart\" exact component={Cart} />\r\n                {/* <AdminRoute path=\"/admin/orders\" exact component={Orders} />\r\n                <PrivateRoute path=\"/profile/:userId\" exact component={Profile} />\r\n                <PrivateRoute path=\"/admin/products\" exact component={ManageProducts} />\r\n                <AdminRoute path=\"/admin/product/update/:productId\" exact component={UpdateProduct} />\r\n                <AdminRoute path=\"/admin/category/update/:categoryId\" exact component={UpdateCategory} /> */}\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n};\r\n\r\nexport default Routes;\r\n\r\n\r\n// import React from 'react';\r\n// import {BrowserRouter, Switch,Route} from 'react-router-dom'; //wraps all components\r\n// import Signup from './user/Signup';\r\n// import Signin from './user/Signin';\r\n// import Home from './core/Home';\r\n// import PrivateRoute from './auth/PrivateRoute';\r\n// import Dashboard from './UserDashboard';\r\n// const Routes = () =>{\r\n//     return (\r\n//     <BrowserRouter>\r\n   \r\n//         <switch>\r\n//            <Route path=\"/\" exact component={Home}/>\r\n//            <Route path=\"/signin\" exact component={Signin}/>\r\n//            <Route path=\"/signup\" exact component={Signup}/>\r\n//            <PrivateRoute path=\"/dasboard\" exact component={Dashboard} />\r\n//         </switch> \r\n//     </BrowserRouter>);\r\n// };\r\n// export default Routes;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Routes from './Routes';\n\nReactDOM.render(<Routes />, document.getElementById('root'));\n\n"],"sourceRoot":""}