{"ast":null,"code":"var _jsxFileName = \"d:\\\\M1\\\\ecommerce-front\\\\src\\\\user\\\\Signin.js\";\nimport React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Layout from \"../core/Layout\";\nimport { signin, authenticate, isAuthenticated } from \"../auth\";\n\nconst Signin = () => {\n  const [values, setValues] = useState({\n    email: '9june@gmail.com',\n    password: 'abc123',\n    error: '',\n    loading: false,\n    redirectToReferrer: false\n  });\n  const {\n    email,\n    password,\n    loading,\n    error,\n    redirectToReferrer\n  } = values;\n  const {\n    user\n  } = isAuthenticated();\n\n  const handleChange = name => event => {\n    setValues({ ...values,\n      error: false,\n      [name]: event.target.value\n    });\n  };\n\n  const clickSubmit = event => {\n    event.preventDefault();\n    setValues({ ...values,\n      error: false,\n      loading: true\n    });\n    signin({\n      email,\n      password\n    }).then(data => {\n      if (data.error) {\n        setValues({ ...values,\n          error: data.error,\n          loading: false\n        });\n      } else {\n        authenticate(data, () => {\n          setValues({ ...values,\n            redirectToReferrer: true\n          });\n        });\n      }\n    });\n  };\n\n  const signUpForm = () => React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Email\"), React.createElement(\"input\", {\n    onChange: handleChange(\"email\"),\n    type: \"email\",\n    className: \"form-control\",\n    value: email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    onChange: handleChange(\"password\"),\n    type: \"password\",\n    className: \"form-control\",\n    value: password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    onClick: clickSubmit,\n    className: \"btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Submit\"));\n\n  const showError = () => React.createElement(\"div\", {\n    className: \"alert alert-danger\",\n    style: {\n      display: error ? \"\" : \"none\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, error);\n\n  const showLoading = () => loading && React.createElement(\"div\", {\n    className: \"alert alert-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Loading...\"));\n\n  const redirectUser = () => {\n    if (redirectToReferrer) {\n      if (user && user.role === 1) {\n        return React.createElement(Redirect, {\n          to: \"/admin/dashboard\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(Redirect, {\n          to: \"/user/dashboard\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        });\n      }\n    }\n\n    if (isAuthenticated()) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      });\n    }\n  };\n\n  return React.createElement(Layout, {\n    title: \"Signin\",\n    description: \"Signin to Node React E-commerce App\",\n    className: \"container col-md-8 offset-md-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, showLoading(), showError(), signUpForm(), redirectUser());\n};\n\nexport default Signin; // import React, { useState } from 'react';\n// import { Link ,Redirect} from 'react-router-dom';\n// import Layout from '../core/Layout';\n// import { signin, authenticate , isAuthenticated} from '../auth';\n// const Signin = () => {\n//     const [values, setValues] = useState({\n//         email: '9june@gmail.com',\n//         password: 'abc123',\n//         error: '',\n//         loading: false,\n//         redirectToReferrer:false,\n//     });\n//     const {  email, password, loading, error ,redirectToReferrer } = values;\n//     const handleChange = name => event => {\n//         setValues({ ...values, error: false, [name]: event.target.value });\n//     };\n//     const clickSubmit = event => {\n//         event.preventDefault();\n//         setValues({ ...values, error: false, loading: true });\n//         signin({ email, password }).then(data => {\n//             if (data.error) {\n//                 setValues({ ...values, error: data.error, loading: false });\n//             } else {\n//                 authenticate(data, () => {\n//                     setValues({\n//                         ...values,\n//                         redirectToReferrer: true\n//                     });\n//                 });\n//             }\n//         });\n//     };\n//     const signUpForm  = () => (\n//         <form>\n//             <div className=\"form-group\">\n//                 <label className=\"text-muted\">Email</label>\n//                 <input onChange={handleChange('email')} type=\"email\" className=\"form-control\" value={email} />\n//             </div>\n//             <div className=\"form-group\">\n//                 <label className=\"text-muted\">Password</label>\n//                 <input onChange={handleChange('password')} type=\"password\" className=\"form-control\" value={password} />\n//             </div>\n//             <button onClick={clickSubmit} className=\"btn btn-primary\">\n//                 Submit\n//             </button>\n//         </form>\n//     );\n//     const showError = () => (\n//         <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\n//             {error}\n//         </div>\n//     );\n//     const showLoading = () =>\n//     loading && (\n//         <div className=\"alert alert-info\">\n//             <h2>Loading...</h2>\n//         </div>\n//     );\n//     const redirectUser = () => {\n//         if (redirectToReferrer) {\n//             if (user && user.role === 1) {\n//                 return <Redirect to=\"/admin/dashboard\" />;\n//             } else {\n//                 return <Redirect to=\"/user/dashboard\" />;\n//             }\n//         }\n//         if (isAuthenticated()) {\n//             return <Redirect to=\"/\" />;\n//         }\n//     };\n//     return (\n//         <Layout\n//             title=\"Signin\"\n//             description=\"Signin to Node React E-commerce App\"\n//             className=\"container col-md-8 offset-md-2\"\n//         >\n//             {showLoading()}\n//             {showError()}\n//             {signUpForm()}\n//             {redirectUser()}\n//         </Layout>\n//     );\n// };\n// export default Signin;\n// import React from \"react\";\n// import Layout from \"../core/Layout\";\n// import {API} from \"../config\";\n// const Signin=()=> (  <Layout title=\"Signin Page\" description=\" ecom app\">\n//       {API}\n//       </Layout>\n// );\n// export default Signin","map":{"version":3,"sources":["d:/M1/ecommerce-front/src/user/Signin.js"],"names":["React","useState","Redirect","Layout","signin","authenticate","isAuthenticated","Signin","values","setValues","email","password","error","loading","redirectToReferrer","user","handleChange","name","event","target","value","clickSubmit","preventDefault","then","data","signUpForm","showError","display","showLoading","redirectUser","role"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Layout from \"../core/Layout\";\r\nimport { signin, authenticate, isAuthenticated } from \"../auth\";\r\n\r\nconst Signin = () => {\r\n    const [values, setValues] = useState({\r\n        email: '9june@gmail.com',\r\n        password: 'abc123',\r\n        error: '',\r\n        loading: false,\r\n        redirectToReferrer:false,\r\n    });\r\n\r\n    const { email, password, loading, error, redirectToReferrer } = values;\r\n    const { user } = isAuthenticated();\r\n\r\n    const handleChange = name => event => {\r\n        setValues({ ...values, error: false, [name]: event.target.value });\r\n    };\r\n\r\n    const clickSubmit = event => {\r\n        event.preventDefault();\r\n        setValues({ ...values, error: false, loading: true });\r\n        signin({ email, password }).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error, loading: false });\r\n            } else {\r\n                authenticate(data, () => {\r\n                    setValues({\r\n                        ...values,\r\n                        redirectToReferrer: true\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    const signUpForm = () => (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Email</label>\r\n                <input\r\n                    onChange={handleChange(\"email\")}\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    value={email}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Password</label>\r\n                <input\r\n                    onChange={handleChange(\"password\")}\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    value={password}\r\n                />\r\n            </div>\r\n            <button onClick={clickSubmit} className=\"btn btn-primary\">\r\n                Submit\r\n            </button>\r\n        </form>\r\n    );\r\n\r\n    const showError = () => (\r\n        <div\r\n            className=\"alert alert-danger\"\r\n            style={{ display: error ? \"\" : \"none\" }}\r\n        >\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const showLoading = () =>\r\n        loading && (\r\n            <div className=\"alert alert-info\">\r\n                <h2>Loading...</h2>\r\n            </div>\r\n        );\r\n\r\n    const redirectUser = () => {\r\n        if (redirectToReferrer) {\r\n            if (user && user.role === 1) {\r\n                return <Redirect to=\"/admin/dashboard\" />;\r\n            } else {\r\n                return <Redirect to=\"/user/dashboard\" />;\r\n            }\r\n        }\r\n        if (isAuthenticated()) {\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Signin\"\r\n            description=\"Signin to Node React E-commerce App\"\r\n            className=\"container col-md-8 offset-md-2\"\r\n        >\r\n            {showLoading()}\r\n            {showError()}\r\n            {signUpForm()}\r\n            {redirectUser()}\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Signin;\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import { Link ,Redirect} from 'react-router-dom';\r\n// import Layout from '../core/Layout';\r\n// import { signin, authenticate , isAuthenticated} from '../auth';\r\n\r\n// const Signin = () => {\r\n//     const [values, setValues] = useState({\r\n//         email: '9june@gmail.com',\r\n//         password: 'abc123',\r\n//         error: '',\r\n//         loading: false,\r\n//         redirectToReferrer:false,\r\n//     });\r\n\r\n//     const {  email, password, loading, error ,redirectToReferrer } = values;\r\n\r\n//     const handleChange = name => event => {\r\n//         setValues({ ...values, error: false, [name]: event.target.value });\r\n//     };\r\n\r\n//     const clickSubmit = event => {\r\n//         event.preventDefault();\r\n//         setValues({ ...values, error: false, loading: true });\r\n//         signin({ email, password }).then(data => {\r\n//             if (data.error) {\r\n//                 setValues({ ...values, error: data.error, loading: false });\r\n//             } else {\r\n//                 authenticate(data, () => {\r\n//                     setValues({\r\n//                         ...values,\r\n//                         redirectToReferrer: true\r\n//                     });\r\n//                 });\r\n//             }\r\n//         });\r\n//     };\r\n\r\n//     const signUpForm  = () => (\r\n//         <form>\r\n            \r\n//             <div className=\"form-group\">\r\n//                 <label className=\"text-muted\">Email</label>\r\n//                 <input onChange={handleChange('email')} type=\"email\" className=\"form-control\" value={email} />\r\n//             </div>\r\n\r\n//             <div className=\"form-group\">\r\n//                 <label className=\"text-muted\">Password</label>\r\n//                 <input onChange={handleChange('password')} type=\"password\" className=\"form-control\" value={password} />\r\n//             </div>\r\n//             <button onClick={clickSubmit} className=\"btn btn-primary\">\r\n//                 Submit\r\n//             </button>\r\n//         </form>\r\n//     );\r\n\r\n//     const showError = () => (\r\n//         <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\r\n//             {error}\r\n//         </div>\r\n//     );\r\n//     const showLoading = () =>\r\n//     loading && (\r\n//         <div className=\"alert alert-info\">\r\n//             <h2>Loading...</h2>\r\n//         </div>\r\n//     );\r\n//     const redirectUser = () => {\r\n//         if (redirectToReferrer) {\r\n//             if (user && user.role === 1) {\r\n//                 return <Redirect to=\"/admin/dashboard\" />;\r\n//             } else {\r\n//                 return <Redirect to=\"/user/dashboard\" />;\r\n//             }\r\n//         }\r\n//         if (isAuthenticated()) {\r\n//             return <Redirect to=\"/\" />;\r\n//         }\r\n//     };\r\n//     return (\r\n//         <Layout\r\n//             title=\"Signin\"\r\n//             description=\"Signin to Node React E-commerce App\"\r\n//             className=\"container col-md-8 offset-md-2\"\r\n//         >\r\n//             {showLoading()}\r\n//             {showError()}\r\n//             {signUpForm()}\r\n//             {redirectUser()}\r\n//         </Layout>\r\n//     );\r\n// };\r\n\r\n// export default Signin;\r\n\r\n\r\n\r\n\r\n// import React from \"react\";\r\n// import Layout from \"../core/Layout\";\r\n// import {API} from \"../config\";\r\n// const Signin=()=> (  <Layout title=\"Signin Page\" description=\" ecom app\">\r\n//       {API}\r\n//       </Layout>\r\n// );\r\n// export default Signin"]},"metadata":{},"sourceType":"module"}