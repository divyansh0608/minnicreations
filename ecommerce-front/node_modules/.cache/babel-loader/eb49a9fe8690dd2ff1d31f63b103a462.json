{"ast":null,"code":"var _jsxFileName = \"D:\\\\minnicreations\\\\ecommerce-front\\\\src\\\\core\\\\Checkbox.js\";\nimport React, { useState } from \"react\";\n\nconst Checkbox = ({\n  categories,\n  handleFilters\n}) => {\n  const [checked, setCheked] = useState([]);\n\n  const handleToggle = c => () => {\n    //higher order function\n    // return the first index or -1\n    const currentCategoryId = checked.indexOf(c);\n    const newCheckedCategoryId = [...checked]; // if currently checked was not already in checked state > push\n    // else pull/take off\n\n    if (currentCategoryId === -1) {\n      newCheckedCategoryId.push(c);\n    } else {\n      newCheckedCategoryId.splice(currentCategoryId, 1);\n    }\n\n    console.log(newCheckedCategoryId);\n    setCheked(newCheckedCategoryId);\n    handleFilters(newCheckedCategoryId);\n  };\n\n  return categories.map((c, i) => React.createElement(\"li\", {\n    key: i,\n    className: \"list-unstyled\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    onChange: handleToggle(c._id),\n    value: checked.indexOf(c._id === -1),\n    type: \"checkbox\",\n    className: \"form-check-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"form-check-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, c.name)));\n};\n\nexport default Checkbox;","map":{"version":3,"sources":["D:/minnicreations/ecommerce-front/src/core/Checkbox.js"],"names":["React","useState","Checkbox","categories","handleFilters","checked","setCheked","handleToggle","c","currentCategoryId","indexOf","newCheckedCategoryId","push","splice","console","log","map","i","_id","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AACC,MAAMC,QAAQ,GAAE,CAAC;AAAEC,EAAAA,UAAF;AAAeC,EAAAA;AAAf,CAAD,KAAkC;AAC/C,QAAM,CAACC,OAAD,EAAUC,SAAV,IAAuBL,QAAQ,CAAC,EAAD,CAArC;;AACA,QAAMM,YAAY,GAAGC,CAAC,IAAI,MAAM;AAAK;AACjC;AACA,UAAMC,iBAAiB,GAAGJ,OAAO,CAACK,OAAR,CAAgBF,CAAhB,CAA1B;AACA,UAAMG,oBAAoB,GAAG,CAAC,GAAGN,OAAJ,CAA7B,CAH4B,CAI5B;AACA;;AACA,QAAII,iBAAiB,KAAK,CAAC,CAA3B,EAA8B;AAC1BE,MAAAA,oBAAoB,CAACC,IAArB,CAA0BJ,CAA1B;AACH,KAFD,MAEO;AACHG,MAAAA,oBAAoB,CAACE,MAArB,CAA4BJ,iBAA5B,EAA+C,CAA/C;AACH;;AACDK,IAAAA,OAAO,CAACC,GAAR,CAAYJ,oBAAZ;AACAL,IAAAA,SAAS,CAACK,oBAAD,CAAT;AACAP,IAAAA,aAAa,CAACO,oBAAD,CAAb;AACH,GAdD;;AAgBA,SAAOR,UAAU,CAACa,GAAX,CAAe,CAACR,CAAD,EAAIS,CAAJ,KAClB;AAAI,IAAA,GAAG,EAAEA,CAAT;AAAY,IAAA,SAAS,EAAC,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,QAAQ,EAAEV,YAAY,CAACC,CAAC,CAACU,GAAH,CAD1B;AAEI,IAAA,KAAK,EAAEb,OAAO,CAACK,OAAR,CAAgBF,CAAC,CAACU,GAAF,KAAU,CAAC,CAA3B,CAFX;AAGI,IAAA,IAAI,EAAC,UAHT;AAII,IAAA,SAAS,EAAC,kBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAOI;AAAO,IAAA,SAAS,EAAC,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCV,CAAC,CAACW,IAAvC,CAPJ,CADG,CAAP;AAWH,CA7BA;;AA+BA,eAAejB,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\n const Checkbox= ({ categories , handleFilters} )=>{\r\n    const [checked, setCheked] = useState([]);\r\n    const handleToggle = c => () => {    //higher order function\r\n        // return the first index or -1\r\n        const currentCategoryId = checked.indexOf(c);\r\n        const newCheckedCategoryId = [...checked];\r\n        // if currently checked was not already in checked state > push\r\n        // else pull/take off\r\n        if (currentCategoryId === -1) {\r\n            newCheckedCategoryId.push(c);\r\n        } else {\r\n            newCheckedCategoryId.splice(currentCategoryId, 1);\r\n        }\r\n        console.log(newCheckedCategoryId);\r\n        setCheked(newCheckedCategoryId);\r\n        handleFilters(newCheckedCategoryId);\r\n    };\r\n\r\n    return categories.map((c, i) => (\r\n        <li key={i} className=\"list-unstyled\">\r\n            <input\r\n                onChange={handleToggle(c._id)}\r\n                value={checked.indexOf(c._id === -1)}\r\n                type=\"checkbox\"\r\n                className=\"form-check-input\"\r\n            />\r\n            <label className=\"form-check-label\">{c.name}</label>\r\n        </li>\r\n    ));\r\n};\r\n\r\n export default Checkbox;\r\n "]},"metadata":{},"sourceType":"module"}