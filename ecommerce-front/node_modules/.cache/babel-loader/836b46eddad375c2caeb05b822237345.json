{"ast":null,"code":"import _slicedToArray from\"D:\\\\minnicreations\\\\ecommerce-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Link,Redirect}from'react-router-dom';import ShowImage from'./ShowImage';import moment from'moment';import{addItem,updateItem,removeItem}from'./cartHelpers';var Card=function Card(_ref){var product=_ref.product,_ref$showViewProductB=_ref.showViewProductButton,showViewProductButton=_ref$showViewProductB===void 0?true:_ref$showViewProductB,_ref$showAddToCartBut=_ref.showAddToCartButton,showAddToCartButton=_ref$showAddToCartBut===void 0?true:_ref$showAddToCartBut,_ref$cartUpdate=_ref.cartUpdate,cartUpdate=_ref$cartUpdate===void 0?false:_ref$cartUpdate,_ref$showRemoveProduc=_ref.showRemoveProductButton,showRemoveProductButton=_ref$showRemoveProduc===void 0?false:_ref$showRemoveProduc,_ref$setRun=_ref.setRun,setRun=_ref$setRun===void 0?function(f){return f;}:_ref$setRun,_ref$run=_ref.run,run=_ref$run===void 0?undefined:_ref$run;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),redirect=_useState2[0],setRedirect=_useState2[1];var _useState3=useState(product.count),_useState4=_slicedToArray(_useState3,2),count=_useState4[0],setCount=_useState4[1];var showViewButton=function showViewButton(showViewProductButton){return showViewProductButton&&React.createElement(Link,{to:\"/product/\".concat(product._id),className:\"mr-2\"},React.createElement(\"button\",{className:\"btn btn-outline-primary mt-2 mb-2 card-btn-1\"},\"View Product\"));};var addToCart=function addToCart(){// console.log('added');\naddItem(product,setRedirect(true));};var shouldRedirect=function shouldRedirect(redirect){if(redirect){return React.createElement(Redirect,{to:\"/cart\"});}};var showAddToCartBtn=function showAddToCartBtn(showAddToCartButton){return showAddToCartButton&&React.createElement(\"button\",{onClick:addToCart,className:\"btn btn-outline-warning mt-2 mb-2 card-btn-1  \"},\"Add to cart\");};var showStock=function showStock(quantity){return quantity>0?React.createElement(\"span\",{className:\"badge badge-primary badge-pill\"},\"In Stock \"):React.createElement(\"span\",{className:\"badge badge-primary badge-pill\"},\"Out of Stock \");};var handleChange=function handleChange(productId){return function(event){setRun(!run);// run useEffect in parent Cart\nsetCount(event.target.value<1?1:event.target.value);if(event.target.value>=1){updateItem(productId,event.target.value);}};};var showCartUpdateOptions=function showCartUpdateOptions(cartUpdate){return cartUpdate&&React.createElement(\"div\",null,React.createElement(\"div\",{className:\"input-group mb-3\"},React.createElement(\"div\",{className:\"input-group-prepend\"},React.createElement(\"span\",{className:\"input-group-text\"},\"Adjust Quantity\")),React.createElement(\"input\",{type:\"number\",className:\"form-control\",value:count,onChange:handleChange(product._id)})));};var showRemoveButton=function showRemoveButton(showRemoveProductButton){return showRemoveProductButton&&React.createElement(\"button\",{onClick:function onClick(){removeItem(product._id);setRun(!run);// run useEffect in parent Cart\n},className:\"btn btn-outline-danger mt-2 mb-2\"},\"Remove Product\");};return React.createElement(\"div\",{className:\"card \"},React.createElement(\"div\",{className:\"card-header card-header-1 \"},product.name),React.createElement(\"div\",{className:\"card-body\"},shouldRedirect(redirect),React.createElement(ShowImage,{item:product,url:\"product\"}),React.createElement(\"p\",{className:\"card-p  mt-2\"},product.description,\" \"),React.createElement(\"p\",{className:\"card-p black-10\"},\"\\u20B9 \",product.price),React.createElement(\"p\",{className:\"black-9\"},\"Category: \",product.category&&product.category.name),React.createElement(\"p\",{className:\"black-8\"},\"Added \",moment(product.createdAt).fromNow()),showStock(product.quantity),React.createElement(\"br\",null),showViewButton(showViewProductButton),showAddToCartBtn(showAddToCartButton),showRemoveButton(showRemoveProductButton),showCartUpdateOptions(cartUpdate)));};export default Card;// import React, { useState } from 'react';\n// // import { Link, Redirect } from 'react-router-dom';\n// import { Link } from 'react-router-dom';\n// import ShowImage from './ShowImage';\n// const Card=({product})=>{\n//     return(\n//         <div className=\"col-4 mb-3\">\n//           <div className=\"card\">\n//           <div className=\"card-header \">{product.name}</div>\n//        <div className=\"card-body\">\n//           <ShowImage item={product} url=\"product\" />\n//           <p>{product.description}</p>\n//           <p>â‚¹{product.price}</p>\n//           <Link to={`/product/${product._id}`} >\n//               <button className=\"btn btn-outline-primary mt-2 mb-2\">\n//                   View Product\n//               </button>\n//           </Link>\n//           <button className=\"btn btn-outline-warn mt-2 mb-2\">\n//                Add To Cart\n//               </button>\n//       </div>\n//         </div>\n//         </div>\n//     );\n// };\n// export default Card;\n// import moment from 'moment';\n// import { addItem, updateItem, removeItem } from './cartHelpers';\n// const Card = ({\n//   product,\n//   showViewProductButton = true,\n//   showAddToCartButton = true,\n//   cartUpdate = false,\n//   showRemoveProductButton = false,\n//   setRun = f => f,\n//   run = undefined\n//   // changeCartSize\n// }) => {\n//   const [redirect, setRedirect] = useState(false);\n//   const [count, setCount] = useState(product.count);\n//   const showViewButton = showViewProductButton => {\n//     return (\n//       showViewProductButton && (\n//         <Link to={`/product/${product._id}`} className=\"mr-2\">\n//           <button className=\"btn btn-outline-primary mt-2 mb-2 card-btn-1\">View Product</button>\n//         </Link>\n//       )\n//     );\n//   };\n//   return (\n// //     <div className=\"card \">\n// //       <div className=\"card-header card-header-1 \">{product.name}</div>\n//       <div className=\"card-body\">\n//         {/* {shouldRedirect(redirect)} */}\n//         <ShowImage item={product} url=\"product\" />\n//         <p className=\"card-p  mt-2\">{product.description.substring(0, 100)} </p>\n//         <p className=\"card-p black-10\">$ {product.price}</p>\n//         <p className=\"black-9\">Category: {product.category && product.category.name}</p>\n//         <p className=\"black-8\">Added on {moment(product.createdAt).fromNow()}</p>\n//         {showStock(product.quantity)}\n//         <br />\n//         {showViewButton(showViewProductButton)}\n//         {showAddToCartBtn(showAddToCartButton)}\n//         {showRemoveButton(showRemoveProductButton)}\n//         {showCartUpdateOptions(cartUpdate)}\n//       </div>\n//     </div>\n//   );\n// };","map":{"version":3,"sources":["D:/minnicreations/ecommerce-front/src/core/Card.js"],"names":["React","useState","Link","Redirect","ShowImage","moment","addItem","updateItem","removeItem","Card","product","showViewProductButton","showAddToCartButton","cartUpdate","showRemoveProductButton","setRun","f","run","undefined","redirect","setRedirect","count","setCount","showViewButton","_id","addToCart","shouldRedirect","showAddToCartBtn","showStock","quantity","handleChange","productId","event","target","value","showCartUpdateOptions","showRemoveButton","name","description","price","category","createdAt","fromNow"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport ShowImage from './ShowImage';\r\nimport moment from 'moment';\r\nimport { addItem, updateItem, removeItem } from './cartHelpers';\r\n\r\nconst Card = ({\r\n  product,\r\n  showViewProductButton = true,\r\n  showAddToCartButton = true,\r\n  cartUpdate = false,\r\n  showRemoveProductButton = false,\r\n  setRun = f => f,\r\n  run = undefined\r\n  // changeCartSize\r\n}) => {\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [count, setCount] = useState(product.count);\r\n\r\n  const showViewButton = showViewProductButton => {\r\n    return (\r\n      showViewProductButton && (\r\n        <Link to={`/product/${product._id}`} className=\"mr-2\">\r\n          <button className=\"btn btn-outline-primary mt-2 mb-2 card-btn-1\">View Product</button>\r\n        </Link>\r\n      )\r\n    );\r\n  };\r\n  const addToCart = () => {\r\n    // console.log('added');\r\n    addItem(product, setRedirect(true));\r\n  };\r\n\r\n  const shouldRedirect = redirect => {\r\n    if (redirect) {\r\n      return <Redirect to=\"/cart\" />;\r\n    }\r\n  };\r\n\r\n  const showAddToCartBtn = showAddToCartButton => {\r\n    return (\r\n      showAddToCartButton && (\r\n        <button onClick={addToCart} className=\"btn btn-outline-warning mt-2 mb-2 card-btn-1  \">\r\n          Add to cart\r\n        </button>\r\n      )\r\n    );\r\n  };\r\n\r\n  const showStock = quantity => {\r\n    return quantity > 0 ? (\r\n      <span className=\"badge badge-primary badge-pill\">In Stock </span>\r\n    ) : (\r\n      <span className=\"badge badge-primary badge-pill\">Out of Stock </span>\r\n    );\r\n  };\r\n\r\n  const handleChange = productId => event => {\r\n    setRun(!run); // run useEffect in parent Cart\r\n    setCount(event.target.value < 1 ? 1 : event.target.value);\r\n    if (event.target.value >= 1) {\r\n      updateItem(productId, event.target.value);\r\n    }\r\n  };\r\n\r\n  const showCartUpdateOptions = cartUpdate => {\r\n    return (\r\n      cartUpdate && (\r\n        <div>\r\n          <div className=\"input-group mb-3\">\r\n            <div className=\"input-group-prepend\">\r\n              <span className=\"input-group-text\">Adjust Quantity</span>\r\n            </div>\r\n            <input type=\"number\" className=\"form-control\" value={count} onChange={handleChange(product._id)} />\r\n          </div>\r\n        </div>\r\n      )\r\n    );\r\n  };\r\n  const showRemoveButton = showRemoveProductButton => {\r\n    return (\r\n      showRemoveProductButton && (\r\n        <button\r\n          onClick={() => {\r\n            removeItem(product._id);\r\n            setRun(!run); // run useEffect in parent Cart\r\n          }}\r\n          className=\"btn btn-outline-danger mt-2 mb-2\"\r\n        >\r\n          Remove Product\r\n        </button>\r\n      )\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"card \">\r\n      <div className=\"card-header card-header-1 \">{product.name}</div>\r\n      <div className=\"card-body\">\r\n        {shouldRedirect(redirect)}\r\n        <ShowImage item={product} url=\"product\" />\r\n        <p className=\"card-p  mt-2\">{product.description} </p>\r\n        <p className=\"card-p black-10\">â‚¹ {product.price}</p>\r\n        <p className=\"black-9\">Category: {product.category && product.category.name}</p>\r\n        <p className=\"black-8\">Added {moment(product.createdAt).fromNow()}</p>\r\n        {showStock(product.quantity)}\r\n        <br />\r\n\r\n        {showViewButton(showViewProductButton)}\r\n\r\n        {showAddToCartBtn(showAddToCartButton)}\r\n\r\n        {showRemoveButton(showRemoveProductButton)}\r\n\r\n        {showCartUpdateOptions(cartUpdate)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n\r\n// import React, { useState } from 'react';\r\n// // import { Link, Redirect } from 'react-router-dom';\r\n// import { Link } from 'react-router-dom';\r\n// import ShowImage from './ShowImage';\r\n\r\n// const Card=({product})=>{\r\n//     return(\r\n//         <div className=\"col-4 mb-3\">\r\n//           <div className=\"card\">\r\n//           <div className=\"card-header \">{product.name}</div>\r\n//        <div className=\"card-body\">\r\n//           <ShowImage item={product} url=\"product\" />\r\n//           <p>{product.description}</p>\r\n//           <p>â‚¹{product.price}</p>\r\n//           <Link to={`/product/${product._id}`} >\r\n//               <button className=\"btn btn-outline-primary mt-2 mb-2\">\r\n//                   View Product\r\n//               </button>\r\n//           </Link>\r\n//           <button className=\"btn btn-outline-warn mt-2 mb-2\">\r\n//                Add To Cart\r\n//               </button>\r\n//       </div>\r\n//         </div>\r\n//         </div>\r\n//     );\r\n// };\r\n// export default Card;\r\n// import moment from 'moment';\r\n// import { addItem, updateItem, removeItem } from './cartHelpers';\r\n\r\n// const Card = ({\r\n//   product,\r\n//   showViewProductButton = true,\r\n//   showAddToCartButton = true,\r\n//   cartUpdate = false,\r\n//   showRemoveProductButton = false,\r\n//   setRun = f => f,\r\n//   run = undefined\r\n//   // changeCartSize\r\n// }) => {\r\n//   const [redirect, setRedirect] = useState(false);\r\n//   const [count, setCount] = useState(product.count);\r\n\r\n//   const showViewButton = showViewProductButton => {\r\n//     return (\r\n//       showViewProductButton && (\r\n//         <Link to={`/product/${product._id}`} className=\"mr-2\">\r\n//           <button className=\"btn btn-outline-primary mt-2 mb-2 card-btn-1\">View Product</button>\r\n//         </Link>\r\n//       )\r\n//     );\r\n//   };\r\n//   return (\r\n// //     <div className=\"card \">\r\n// //       <div className=\"card-header card-header-1 \">{product.name}</div>\r\n//       <div className=\"card-body\">\r\n//         {/* {shouldRedirect(redirect)} */}\r\n//         <ShowImage item={product} url=\"product\" />\r\n//         <p className=\"card-p  mt-2\">{product.description.substring(0, 100)} </p>\r\n//         <p className=\"card-p black-10\">$ {product.price}</p>\r\n//         <p className=\"black-9\">Category: {product.category && product.category.name}</p>\r\n//         <p className=\"black-8\">Added on {moment(product.createdAt).fromNow()}</p>\r\n//         {showStock(product.quantity)}\r\n//         <br />\r\n\r\n//         {showViewButton(showViewProductButton)}\r\n\r\n//         {showAddToCartBtn(showAddToCartButton)}\r\n\r\n//         {showRemoveButton(showRemoveProductButton)}\r\n\r\n//         {showCartUpdateOptions(cartUpdate)}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };"]},"metadata":{},"sourceType":"module"}