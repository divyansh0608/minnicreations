{"ast":null,"code":"var _jsxFileName = \"d:\\\\M1\\\\ecommerce-front\\\\src\\\\core\\\\Card.js\";\nimport React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport ShowImage from './ShowImage';\nimport moment from 'moment';\nimport { addItem, updateItem, removeItem } from './cartHelpers';\n\nconst Card = ({\n  product,\n  showViewProductButton = true,\n  showAddToCartButton = true,\n  cartUpdate = false,\n  showRemoveProductButton = false,\n  setRun = f => f,\n  run = undefined // changeCartSize\n\n}) => {\n  const [redirect, setRedirect] = useState(false);\n  const [count, setCount] = useState(product.count);\n\n  const showViewButton = showViewProductButton => {\n    return showViewProductButton && React.createElement(Link, {\n      to: `/product/${product._id}`,\n      className: \"mr-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-outline-primary mt-2 mb-2 card-btn-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"View Product\"));\n  };\n\n  const addToCart = () => {\n    // console.log('added');\n    addItem(product, setRedirect(true));\n  };\n\n  const shouldRedirect = redirect => {\n    if (redirect) {\n      return React.createElement(Redirect, {\n        to: \"/cart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      });\n    }\n  };\n\n  const showAddToCartBtn = showAddToCartButton => {\n    return showAddToCartButton && React.createElement(\"button\", {\n      onClick: addToCart,\n      className: \"btn btn-outline-warning mt-2 mb-2 card-btn-1  \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Add to cart\");\n  };\n\n  const showStock = quantity => {\n    return quantity > 0 ? React.createElement(\"span\", {\n      className: \"badge badge-primary badge-pill\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"In Stock \") : React.createElement(\"span\", {\n      className: \"badge badge-primary badge-pill\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Out of Stock \");\n  };\n\n  const handleChange = productId => event => {\n    setRun(!run); // run useEffect in parent Cart\n\n    setCount(event.target.value < 1 ? 1 : event.target.value);\n\n    if (event.target.value >= 1) {\n      updateItem(productId, event.target.value);\n    }\n  };\n\n  const showCartUpdateOptions = cartUpdate => {\n    return cartUpdate && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"input-group-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Adjust Quantity\")), React.createElement(\"input\", {\n      type: \"number\",\n      className: \"form-control\",\n      value: count,\n      onChange: handleChange(product._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })));\n  };\n\n  const showRemoveButton = showRemoveProductButton => {\n    return showRemoveProductButton && React.createElement(\"button\", {\n      onClick: () => {\n        removeItem(product._id);\n        setRun(!run); // run useEffect in parent Cart\n      },\n      className: \"btn btn-outline-danger mt-2 mb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Remove Product\");\n  };\n\n  return React.createElement(\"div\", {\n    className: \"card \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-header card-header-1 \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, product.name), React.createElement(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, shouldRedirect(redirect), React.createElement(ShowImage, {\n    item: product,\n    url: \"product\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"card-p  mt-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, product.description, \" \"), React.createElement(\"p\", {\n    className: \"card-p black-10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"\\u20B9 \", product.price), React.createElement(\"p\", {\n    className: \"black-9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Category: \", product.category && product.category.name), React.createElement(\"p\", {\n    className: \"black-8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Added on \", moment(product.createdAt).fromNow()), showStock(product.quantity), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), showViewButton(showViewProductButton), showAddToCartBtn(showAddToCartButton), showRemoveButton(showRemoveProductButton), showCartUpdateOptions(cartUpdate)));\n};\n\nexport default Card; // import React, { useState } from 'react';\n// // import { Link, Redirect } from 'react-router-dom';\n// import { Link } from 'react-router-dom';\n// import ShowImage from './ShowImage';\n// const Card=({product})=>{\n//     return(\n//         <div className=\"col-4 mb-3\">\n//           <div className=\"card\">\n//           <div className=\"card-header \">{product.name}</div>\n//        <div className=\"card-body\">\n//           <ShowImage item={product} url=\"product\" />\n//           <p>{product.description}</p>\n//           <p>â‚¹{product.price}</p>\n//           <Link to={`/product/${product._id}`} >\n//               <button className=\"btn btn-outline-primary mt-2 mb-2\">\n//                   View Product\n//               </button>\n//           </Link>\n//           <button className=\"btn btn-outline-warn mt-2 mb-2\">\n//                Add To Cart\n//               </button>\n//       </div>\n//         </div>\n//         </div>\n//     );\n// };\n// export default Card;\n// import moment from 'moment';\n// import { addItem, updateItem, removeItem } from './cartHelpers';\n// const Card = ({\n//   product,\n//   showViewProductButton = true,\n//   showAddToCartButton = true,\n//   cartUpdate = false,\n//   showRemoveProductButton = false,\n//   setRun = f => f,\n//   run = undefined\n//   // changeCartSize\n// }) => {\n//   const [redirect, setRedirect] = useState(false);\n//   const [count, setCount] = useState(product.count);\n//   const showViewButton = showViewProductButton => {\n//     return (\n//       showViewProductButton && (\n//         <Link to={`/product/${product._id}`} className=\"mr-2\">\n//           <button className=\"btn btn-outline-primary mt-2 mb-2 card-btn-1\">View Product</button>\n//         </Link>\n//       )\n//     );\n//   };\n//   return (\n// //     <div className=\"card \">\n// //       <div className=\"card-header card-header-1 \">{product.name}</div>\n//       <div className=\"card-body\">\n//         {/* {shouldRedirect(redirect)} */}\n//         <ShowImage item={product} url=\"product\" />\n//         <p className=\"card-p  mt-2\">{product.description.substring(0, 100)} </p>\n//         <p className=\"card-p black-10\">$ {product.price}</p>\n//         <p className=\"black-9\">Category: {product.category && product.category.name}</p>\n//         <p className=\"black-8\">Added on {moment(product.createdAt).fromNow()}</p>\n//         {showStock(product.quantity)}\n//         <br />\n//         {showViewButton(showViewProductButton)}\n//         {showAddToCartBtn(showAddToCartButton)}\n//         {showRemoveButton(showRemoveProductButton)}\n//         {showCartUpdateOptions(cartUpdate)}\n//       </div>\n//     </div>\n//   );\n// };","map":{"version":3,"sources":["d:/M1/ecommerce-front/src/core/Card.js"],"names":["React","useState","Link","Redirect","ShowImage","moment","addItem","updateItem","removeItem","Card","product","showViewProductButton","showAddToCartButton","cartUpdate","showRemoveProductButton","setRun","f","run","undefined","redirect","setRedirect","count","setCount","showViewButton","_id","addToCart","shouldRedirect","showAddToCartBtn","showStock","quantity","handleChange","productId","event","target","value","showCartUpdateOptions","showRemoveButton","name","description","price","category","createdAt","fromNow"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport ShowImage from './ShowImage';\r\nimport moment from 'moment';\r\nimport { addItem, updateItem, removeItem } from './cartHelpers';\r\n\r\nconst Card = ({\r\n  product,\r\n  showViewProductButton = true,\r\n  showAddToCartButton = true,\r\n  cartUpdate = false,\r\n  showRemoveProductButton = false,\r\n  setRun = f => f,\r\n  run = undefined\r\n  // changeCartSize\r\n}) => {\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [count, setCount] = useState(product.count);\r\n\r\n  const showViewButton = showViewProductButton => {\r\n    return (\r\n      showViewProductButton && (\r\n        <Link to={`/product/${product._id}`} className=\"mr-2\">\r\n          <button className=\"btn btn-outline-primary mt-2 mb-2 card-btn-1\">View Product</button>\r\n        </Link>\r\n      )\r\n    );\r\n  };\r\n  const addToCart = () => {\r\n    // console.log('added');\r\n    addItem(product, setRedirect(true));\r\n  };\r\n\r\n  const shouldRedirect = redirect => {\r\n    if (redirect) {\r\n      return <Redirect to=\"/cart\" />;\r\n    }\r\n  };\r\n\r\n  const showAddToCartBtn = showAddToCartButton => {\r\n    return (\r\n      showAddToCartButton && (\r\n        <button onClick={addToCart} className=\"btn btn-outline-warning mt-2 mb-2 card-btn-1  \">\r\n          Add to cart\r\n        </button>\r\n      )\r\n    );\r\n  };\r\n\r\n  const showStock = quantity => {\r\n    return quantity > 0 ? (\r\n      <span className=\"badge badge-primary badge-pill\">In Stock </span>\r\n    ) : (\r\n      <span className=\"badge badge-primary badge-pill\">Out of Stock </span>\r\n    );\r\n  };\r\n\r\n  const handleChange = productId => event => {\r\n    setRun(!run); // run useEffect in parent Cart\r\n    setCount(event.target.value < 1 ? 1 : event.target.value);\r\n    if (event.target.value >= 1) {\r\n      updateItem(productId, event.target.value);\r\n    }\r\n  };\r\n\r\n  const showCartUpdateOptions = cartUpdate => {\r\n    return (\r\n      cartUpdate && (\r\n        <div>\r\n          <div className=\"input-group mb-3\">\r\n            <div className=\"input-group-prepend\">\r\n              <span className=\"input-group-text\">Adjust Quantity</span>\r\n            </div>\r\n            <input type=\"number\" className=\"form-control\" value={count} onChange={handleChange(product._id)} />\r\n          </div>\r\n        </div>\r\n      )\r\n    );\r\n  };\r\n  const showRemoveButton = showRemoveProductButton => {\r\n    return (\r\n      showRemoveProductButton && (\r\n        <button\r\n          onClick={() => {\r\n            removeItem(product._id);\r\n            setRun(!run); // run useEffect in parent Cart\r\n          }}\r\n          className=\"btn btn-outline-danger mt-2 mb-2\"\r\n        >\r\n          Remove Product\r\n        </button>\r\n      )\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"card \">\r\n      <div className=\"card-header card-header-1 \">{product.name}</div>\r\n      <div className=\"card-body\">\r\n        {shouldRedirect(redirect)}\r\n        <ShowImage item={product} url=\"product\" />\r\n        <p className=\"card-p  mt-2\">{product.description} </p>\r\n        <p className=\"card-p black-10\">â‚¹ {product.price}</p>\r\n        <p className=\"black-9\">Category: {product.category && product.category.name}</p>\r\n        <p className=\"black-8\">Added on {moment(product.createdAt).fromNow()}</p>\r\n        {showStock(product.quantity)}\r\n        <br />\r\n\r\n        {showViewButton(showViewProductButton)}\r\n\r\n        {showAddToCartBtn(showAddToCartButton)}\r\n\r\n        {showRemoveButton(showRemoveProductButton)}\r\n\r\n        {showCartUpdateOptions(cartUpdate)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n\r\n// import React, { useState } from 'react';\r\n// // import { Link, Redirect } from 'react-router-dom';\r\n// import { Link } from 'react-router-dom';\r\n// import ShowImage from './ShowImage';\r\n\r\n// const Card=({product})=>{\r\n//     return(\r\n//         <div className=\"col-4 mb-3\">\r\n//           <div className=\"card\">\r\n//           <div className=\"card-header \">{product.name}</div>\r\n//        <div className=\"card-body\">\r\n//           <ShowImage item={product} url=\"product\" />\r\n//           <p>{product.description}</p>\r\n//           <p>â‚¹{product.price}</p>\r\n//           <Link to={`/product/${product._id}`} >\r\n//               <button className=\"btn btn-outline-primary mt-2 mb-2\">\r\n//                   View Product\r\n//               </button>\r\n//           </Link>\r\n//           <button className=\"btn btn-outline-warn mt-2 mb-2\">\r\n//                Add To Cart\r\n//               </button>\r\n//       </div>\r\n//         </div>\r\n//         </div>\r\n//     );\r\n// };\r\n// export default Card;\r\n// import moment from 'moment';\r\n// import { addItem, updateItem, removeItem } from './cartHelpers';\r\n\r\n// const Card = ({\r\n//   product,\r\n//   showViewProductButton = true,\r\n//   showAddToCartButton = true,\r\n//   cartUpdate = false,\r\n//   showRemoveProductButton = false,\r\n//   setRun = f => f,\r\n//   run = undefined\r\n//   // changeCartSize\r\n// }) => {\r\n//   const [redirect, setRedirect] = useState(false);\r\n//   const [count, setCount] = useState(product.count);\r\n\r\n//   const showViewButton = showViewProductButton => {\r\n//     return (\r\n//       showViewProductButton && (\r\n//         <Link to={`/product/${product._id}`} className=\"mr-2\">\r\n//           <button className=\"btn btn-outline-primary mt-2 mb-2 card-btn-1\">View Product</button>\r\n//         </Link>\r\n//       )\r\n//     );\r\n//   };\r\n//   return (\r\n// //     <div className=\"card \">\r\n// //       <div className=\"card-header card-header-1 \">{product.name}</div>\r\n//       <div className=\"card-body\">\r\n//         {/* {shouldRedirect(redirect)} */}\r\n//         <ShowImage item={product} url=\"product\" />\r\n//         <p className=\"card-p  mt-2\">{product.description.substring(0, 100)} </p>\r\n//         <p className=\"card-p black-10\">$ {product.price}</p>\r\n//         <p className=\"black-9\">Category: {product.category && product.category.name}</p>\r\n//         <p className=\"black-8\">Added on {moment(product.createdAt).fromNow()}</p>\r\n//         {showStock(product.quantity)}\r\n//         <br />\r\n\r\n//         {showViewButton(showViewProductButton)}\r\n\r\n//         {showAddToCartBtn(showAddToCartButton)}\r\n\r\n//         {showRemoveButton(showRemoveProductButton)}\r\n\r\n//         {showCartUpdateOptions(cartUpdate)}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };"]},"metadata":{},"sourceType":"module"}