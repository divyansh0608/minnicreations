{"ast":null,"code":"var _jsxFileName = \"d:\\\\M1\\\\ecommerce-front\\\\src\\\\core\\\\Search.js\";\n// import React, { useState, useEffect } from \"react\";\n// import { getCategories, list } from \"./apiCore\";\n// import Card from \"./Card\";\n// const Search = () => {\n//     const [data, setData] = useState({\n//         categories: [],\n//         category: \"\",\n//         search: \"\",\n//         results: [],\n//         searched: false\n//     }); \n//     const { categories, category, search, results, searched } = data;\n//     const loadCategories = () => {\n//         getCategories().then(data => {\n//             if (data.error) {\n//                 console.log(data.error);\n//             } else {\n//                 setData({ ...data, categories: data });\n//             }\n//         });\n//     };\n//     useEffect(() => {\n//         loadCategories();\n//     }, []);\n//     const searchData = () => {\n//         // console.log(search, category);\n//         if (search) {\n//             list({ search: search || undefined, category: category }).then(\n//                 response => {\n//                     if (response.error) {\n//                         console.log(response.error);\n//                     } else {\n//                         setData({ ...data, results: response, searched: true });\n//                     }\n//                 }\n//             );\n//         }\n//     };\n//     const searchSubmit = e => {\n//         e.preventDefault();\n//         searchData();\n//     };\n//     const handleChange = name => event => {\n//         setData({ ...data, [name]: event.target.value, searched: false });\n//     };\n//     const searchMessage = (searched, results) => {\n//         if (searched && results.length > 0) {\n//             return `Found ${results.length} products`;\n//         }\n//         if (searched && results.length < 1) {\n//             return `No products found`;\n//         }\n//     };\n//     const searchedProducts = (results = []) => {\n//         return (\n//             <div>\n//                 <h2 className=\"mt-4 mb-4\">\n//                     {searchMessage(searched, results)}\n//                 </h2>\n//                 <div className=\"row\">\n//                     {results.map((product, i) => (\n//                         <div className=\"col-4 mb-3\">\n//                             <Card key={i} product={product} />\n//                         </div>\n//                     ))}\n//                 </div>\n//             </div>\n//         );\n//     };\n//     const searchForm = () => (\n//         <form onSubmit={searchSubmit}>\n//             <span className=\"input-group-text\">\n//                 <div className=\"input-group input-group-lg\">\n//                     <div className=\"input-group-prepend\">\n//                         <select\n//                             className=\"btn mr-2\"\n//                             onChange={handleChange(\"category\")}\n//                         >\n//                             <option value=\"All\">All</option>\n//                             {categories.map((c, i) => (\n//                                 <option key={i} value={c._id}>\n//                                     {c.name}\n//                                 </option>\n//                             ))}\n//                         </select>\n//                     </div>\n//                     <input\n//                         type=\"search\"\n//                         className=\"form-control\"\n//                         onChange={handleChange(\"search\")}\n//                         placeholder=\"Search by name\"\n//                     />\n//                 </div>\n//                 <div\n//                     className=\"btn input-group-append\"\n//                     style={{ border: \"none\" }}\n//                 >\n//                     <button className=\"input-group-text\">Search</button>\n//                 </div>\n//             </span>\n//         </form>\n//     );\n//     return (\n//         <div className=\"row\">\n//             <div className=\"container mb-3\">{searchForm()}</div>\n//             <div className=\"container-fluid mb-3\">\n//                 {searchedProducts(results)}\n//             </div>\n//         </div>\n//     );\n// };\n// export default Search;\nimport React, { useState, useEffect } from \"react\";\nimport { getCategories, list } from \"./apiCore\";\nimport Card from \"./Card\";\n\nconst Search = () => {\n  const [data, setData] = useState({\n    categories: [],\n    category: \"\",\n    search: \"\",\n    results: [],\n    searched: false\n  });\n  const {\n    categories,\n    category,\n    search,\n    results,\n    searched\n  } = data;\n\n  const loadCategories = () => {\n    getCategories().then(data => {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        setData({ ...data,\n          categories: data\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    loadCategories();\n  }, []);\n\n  const searchData = () => {\n    // console.log(search, category);\n    if (search) {\n      list({\n        search: search || undefined,\n        category: category\n      }).then(response => {\n        if (response.error) {\n          console.log(response.error);\n        } else {\n          setData({ ...data,\n            results: response,\n            searched: true\n          });\n        }\n      });\n    }\n  };\n\n  const searchSubmit = e => {\n    e.preventDefault();\n    searchData();\n  };\n\n  const handleChange = name => event => {\n    setData({ ...data,\n      [name]: event.target.value,\n      searched: false\n    });\n  };\n\n  const searchMessage = (searched, results) => {\n    if (searched && results.length > 0) {\n      return `Found ${results.length} products`;\n    }\n\n    if (searched && results.length < 1) {\n      return `No products found`;\n    }\n  };\n\n  const searchedProducts = (results = []) => {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"mt-4 mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, searchMessage(searched, results)), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, results.map((product, i) => React.createElement(\"div\", {\n      className: \"col-4 mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(Card, {\n      key: i,\n      product: product,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    })))));\n  };\n\n  const searchForm = () => React.createElement(\"form\", {\n    onSubmit: searchSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"input-group-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-group input-group-lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-group-prepend\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    className: \"btn mr-2\",\n    onChange: handleChange(\"category\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"All\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, \"All\"), categories.map((c, i) => React.createElement(\"option\", {\n    key: i,\n    value: c._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, c.name)))), React.createElement(\"input\", {\n    type: \"search\",\n    className: \"form-control\",\n    onChange: handleChange(\"search\"),\n    placeholder: \"Search by name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"btn input-group-append\",\n    style: {\n      border: \"none\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"input-group-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, \"Search\"))));\n\n  return React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, searchForm()), React.createElement(\"div\", {\n    className: \"container-fluid mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, searchedProducts(results)));\n};\n\nexport default Search;","map":{"version":3,"sources":["d:/M1/ecommerce-front/src/core/Search.js"],"names":["React","useState","useEffect","getCategories","list","Card","Search","data","setData","categories","category","search","results","searched","loadCategories","then","error","console","log","searchData","undefined","response","searchSubmit","e","preventDefault","handleChange","name","event","target","value","searchMessage","length","searchedProducts","map","product","i","searchForm","c","_id","border"],"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","sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import { getCategories, list } from \"./apiCore\";\r\n// import Card from \"./Card\";\r\n\r\n// const Search = () => {\r\n//     const [data, setData] = useState({\r\n//         categories: [],\r\n//         category: \"\",\r\n//         search: \"\",\r\n//         results: [],\r\n//         searched: false\r\n//     }); \r\n\r\n//     const { categories, category, search, results, searched } = data;\r\n\r\n//     const loadCategories = () => {\r\n//         getCategories().then(data => {\r\n//             if (data.error) {\r\n//                 console.log(data.error);\r\n//             } else {\r\n//                 setData({ ...data, categories: data });\r\n//             }\r\n//         });\r\n//     };\r\n\r\n//     useEffect(() => {\r\n//         loadCategories();\r\n//     }, []);\r\n\r\n//     const searchData = () => {\r\n//         // console.log(search, category);\r\n//         if (search) {\r\n//             list({ search: search || undefined, category: category }).then(\r\n//                 response => {\r\n//                     if (response.error) {\r\n//                         console.log(response.error);\r\n//                     } else {\r\n//                         setData({ ...data, results: response, searched: true });\r\n//                     }\r\n//                 }\r\n//             );\r\n//         }\r\n//     };\r\n\r\n//     const searchSubmit = e => {\r\n//         e.preventDefault();\r\n//         searchData();\r\n//     };\r\n\r\n//     const handleChange = name => event => {\r\n//         setData({ ...data, [name]: event.target.value, searched: false });\r\n//     };\r\n\r\n//     const searchMessage = (searched, results) => {\r\n//         if (searched && results.length > 0) {\r\n//             return `Found ${results.length} products`;\r\n//         }\r\n//         if (searched && results.length < 1) {\r\n//             return `No products found`;\r\n//         }\r\n//     };\r\n\r\n//     const searchedProducts = (results = []) => {\r\n//         return (\r\n//             <div>\r\n//                 <h2 className=\"mt-4 mb-4\">\r\n//                     {searchMessage(searched, results)}\r\n//                 </h2>\r\n\r\n//                 <div className=\"row\">\r\n//                     {results.map((product, i) => (\r\n//                         <div className=\"col-4 mb-3\">\r\n//                             <Card key={i} product={product} />\r\n//                         </div>\r\n//                     ))}\r\n//                 </div>\r\n//             </div>\r\n//         );\r\n//     };\r\n\r\n//     const searchForm = () => (\r\n//         <form onSubmit={searchSubmit}>\r\n//             <span className=\"input-group-text\">\r\n//                 <div className=\"input-group input-group-lg\">\r\n//                     <div className=\"input-group-prepend\">\r\n//                         <select\r\n//                             className=\"btn mr-2\"\r\n//                             onChange={handleChange(\"category\")}\r\n//                         >\r\n//                             <option value=\"All\">All</option>\r\n//                             {categories.map((c, i) => (\r\n//                                 <option key={i} value={c._id}>\r\n//                                     {c.name}\r\n//                                 </option>\r\n//                             ))}\r\n//                         </select>\r\n//                     </div>\r\n\r\n//                     <input\r\n//                         type=\"search\"\r\n//                         className=\"form-control\"\r\n//                         onChange={handleChange(\"search\")}\r\n//                         placeholder=\"Search by name\"\r\n//                     />\r\n//                 </div>\r\n//                 <div\r\n//                     className=\"btn input-group-append\"\r\n//                     style={{ border: \"none\" }}\r\n//                 >\r\n//                     <button className=\"input-group-text\">Search</button>\r\n//                 </div>\r\n//             </span>\r\n//         </form>\r\n//     );\r\n\r\n//     return (\r\n//         <div className=\"row\">\r\n//             <div className=\"container mb-3\">{searchForm()}</div>\r\n//             <div className=\"container-fluid mb-3\">\r\n//                 {searchedProducts(results)}\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Search;\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { getCategories, list } from \"./apiCore\";\r\nimport Card from \"./Card\";\r\n\r\nconst Search = () => {\r\n    const [data, setData] = useState({\r\n        categories: [],\r\n        category: \"\",\r\n        search: \"\",\r\n        results: [],\r\n        searched: false\r\n    });\r\n    const { categories, category, search, results, searched } = data;\r\n\r\n    const loadCategories = () => {\r\n        getCategories().then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n            } else {\r\n                setData({ ...data, categories: data });\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadCategories();\r\n    }, []);\r\n    const searchData = () => {\r\n        // console.log(search, category);\r\n        if (search) {\r\n            list({ search: search || undefined, category: category }).then(\r\n                response => {\r\n                    if (response.error) {\r\n                        console.log(response.error);\r\n                    } else {\r\n                        setData({ ...data, results: response, searched: true });\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    };\r\n    const searchSubmit = e => {\r\n        e.preventDefault();\r\n        searchData();\r\n    };\r\n\r\n    const handleChange = name => event => {\r\n        setData({ ...data, [name]: event.target.value, searched: false });\r\n    };\r\n\r\n    const searchMessage = (searched, results) => {\r\n        if (searched && results.length > 0) {\r\n            return `Found ${results.length} products`;\r\n        }\r\n        if (searched && results.length < 1) {\r\n            return `No products found`;\r\n        }\r\n    };\r\n    const searchedProducts = (results = []) => {\r\n                return (\r\n                    <div>\r\n                        <h2 className=\"mt-4 mb-4\">\r\n                            {searchMessage(searched, results)}\r\n                        </h2>\r\n        \r\n                        <div className=\"row\">\r\n                            {results.map((product, i) => (\r\n                                <div className=\"col-4 mb-3\">\r\n                                    <Card key={i} product={product} />\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                );\r\n            };\r\n    const searchForm = () => (\r\n        <form onSubmit={searchSubmit}>\r\n            <span className=\"input-group-text\">\r\n                <div className=\"input-group input-group-lg\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <select\r\n                            className=\"btn mr-2\"\r\n                            onChange={handleChange(\"category\")}\r\n                        >\r\n                            <option value=\"All\">All</option>\r\n                            {categories.map((c, i) => (\r\n                                <option key={i} value={c._id}>\r\n                                    {c.name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <input\r\n                        type=\"search\"\r\n                        className=\"form-control\"\r\n                        onChange={handleChange(\"search\")}\r\n                        placeholder=\"Search by name\"\r\n                    />\r\n                </div>\r\n                <div\r\n                    className=\"btn input-group-append\"\r\n                    style={{ border: \"none\" }}\r\n                >\r\n                    <button className=\"input-group-text\">Search</button>\r\n                </div>\r\n            </span>\r\n        </form>\r\n    );\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"container mb-3\">{searchForm()}</div>\r\n            <div className=\"container-fluid mb-3\">\r\n                {searchedProducts(results)}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Search;\r\n"]},"metadata":{},"sourceType":"module"}