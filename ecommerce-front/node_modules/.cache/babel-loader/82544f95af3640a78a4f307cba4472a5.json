{"ast":null,"code":"var _jsxFileName = \"d:\\\\M1\\\\ecommerce-front\\\\src\\\\core\\\\Shop.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Layout from \"./Layout\";\nimport Card from \"./Card\";\nimport { getCategories, getFilteredProducts } from \"./apiCore\"; //import { getCategories } from \"./apiCore\";\n\nimport RadioBox from \"./RadioBox\";\nimport { prices } from \"./fixedPrices\";\nimport Checkbox from \"./Checkbox\";\n\nconst Shop = () => {\n  const [myFilters, setMyFilters] = useState({\n    filters: {\n      category: [],\n      price: []\n    }\n  });\n  const [categories, setCategories] = useState([]);\n  const [error, setError] = useState(false);\n\n  const init = () => {\n    getCategories().then(data => {\n      if (data.error) {\n        setError(data.error);\n      } else {\n        setCategories(data);\n      }\n    });\n  };\n\n  useEffect(() => {\n    init(); // loadFilteredResults(skip, limit, myFilters.filters);\n  }, []);\n\n  const handleFilters = (filters, filterBy) => {\n    // console.log(\"SHOP\", filters, filterBy);\n    const newFilters = { ...myFilters\n    };\n    newFilters.filters[filterBy] = filters;\n\n    if (filterBy === \"price\") {\n      let priceValues = handlePrice(filters);\n      newFilters.filters[filterBy] = priceValues;\n    }\n\n    loadFilteredResults(myFilters.filters);\n    setMyFilters(newFilters);\n  };\n\n  const loadFilteredResults = newFilters => {\n    // console.log(newFilters);\n    getFilteredProducts(skip, limit, newFilters).then(data => {\n      if (data.error) {\n        setError(data.error);\n      } else {\n        setFilteredResults(data.data);\n        setSize(data.size);\n        setSkip(0);\n      }\n    });\n  };\n\n  const handlePrice = value => {\n    const data = prices;\n    let array = [];\n\n    for (let key in data) {\n      if (data[key]._id === parseInt(value)) {\n        array = data[key].array;\n      }\n    }\n\n    return array;\n  };\n\n  return React.createElement(Layout, {\n    title: \"Shop Page\",\n    description: \"Search and find books of your choice\",\n    className: \"container-fluid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Filter by categories\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    categories: categories,\n    handleFilters: filters => handleFilters(filters, \"category\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Filter by price range\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(RadioBox, {\n    prices: prices,\n    handleFilters: filters => handleFilters(filters, \"price\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })))));\n};\n\nexport default Shop;","map":{"version":3,"sources":["d:/M1/ecommerce-front/src/core/Shop.js"],"names":["React","useState","useEffect","Layout","Card","getCategories","getFilteredProducts","RadioBox","prices","Checkbox","Shop","myFilters","setMyFilters","filters","category","price","categories","setCategories","error","setError","init","then","data","handleFilters","filterBy","newFilters","priceValues","handlePrice","loadFilteredResults","skip","limit","setFilteredResults","setSize","size","setSkip","value","array","key","_id","parseInt"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"./Layout\";\r\nimport Card from \"./Card\";\r\nimport { getCategories, getFilteredProducts } from \"./apiCore\";\r\n//import { getCategories } from \"./apiCore\";\r\nimport RadioBox from \"./RadioBox\";\r\nimport { prices } from \"./fixedPrices\";\r\nimport Checkbox from \"./Checkbox\";\r\nconst Shop = () => {\r\n    const [myFilters, setMyFilters] = useState({\r\n        filters: { category: [], price: [] }\r\n    });\r\n    const [categories, setCategories] = useState([]);\r\n    const [error, setError] = useState(false);\r\n\r\n    const init = () => {\r\n        getCategories().then(data => {\r\n            if (data.error) {\r\n                setError(data.error);\r\n            } else {\r\n                setCategories(data);\r\n            }\r\n        });\r\n    }; \r\n    \r\n    useEffect(() => {\r\n        init();\r\n        // loadFilteredResults(skip, limit, myFilters.filters);\r\n    }, []);\r\n\r\n    const handleFilters = (filters, filterBy) => {\r\n        // console.log(\"SHOP\", filters, filterBy);\r\n        const newFilters = { ...myFilters };\r\n        newFilters.filters[filterBy] = filters;\r\n\r\n        if (filterBy === \"price\") {\r\n            let priceValues = handlePrice(filters);\r\n            newFilters.filters[filterBy] = priceValues;\r\n        }\r\n        loadFilteredResults(myFilters.filters);\r\n        setMyFilters(newFilters);\r\n    };\r\n\r\n    const loadFilteredResults = newFilters => {\r\n        // console.log(newFilters);\r\n        getFilteredProducts(skip, limit, newFilters).then(data => {\r\n            if (data.error) {\r\n                setError(data.error);\r\n            } else {\r\n                setFilteredResults(data.data);\r\n                setSize(data.size);\r\n                setSkip(0);\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n    const handlePrice = value => {\r\n        const data = prices;\r\n        let array = [];\r\n\r\n        for (let key in data) {\r\n            if (data[key]._id === parseInt(value)) {\r\n                array = data[key].array;\r\n            }\r\n        }\r\n        return array;\r\n    };\r\n\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Shop Page\"\r\n            description=\"Search and find books of your choice\"\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-4\">\r\n                    <h4>Filter by categories</h4>\r\n                    <ul>\r\n                        <Checkbox\r\n                            categories={categories}\r\n                            handleFilters={filters =>\r\n                            handleFilters(filters, \"category\")\r\n                            }\r\n                        />\r\n                    </ul>\r\n\r\n                    <h4>Filter by price range</h4>\r\n                    <div>\r\n                        <RadioBox\r\n                            prices={prices}\r\n                            handleFilters={filters =>\r\n                                handleFilters(filters, \"price\")\r\n                            }\r\n                        />\r\n                    </div>\r\n                </div>\r\n{/* \r\n                <div className=\"col-8\">\r\n                    <h2 className=\"mb-4\">Products</h2>\r\n                    <div className=\"row\">\r\n                        {filteredResults.map((product, i) => (\r\n                            <div key={i} className=\"col-4 mb-3\">\r\n                                <Card product={product} />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <hr />\r\n                    {loadMoreButton()}\r\n                </div> */}\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Shop;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}