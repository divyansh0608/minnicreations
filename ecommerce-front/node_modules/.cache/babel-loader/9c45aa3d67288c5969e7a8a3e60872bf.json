{"ast":null,"code":"import _objectSpread from\"D:\\\\minnicreations\\\\ecommerce-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";export var addItem=function addItem(){var item=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var count=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var next=arguments.length>2&&arguments[2]!==undefined?arguments[2]:function(f){return f;};var cart=[];if(typeof window!=='undefined'){if(localStorage.getItem('cart')){cart=JSON.parse(localStorage.getItem('cart'));}cart.push(_objectSpread({},item,{count:1}));// remove duplicates\n// build an Array from new Set and turn it back into array using Array.from\n// so that later we can re-map it\n// new set will only allow unique values in it\n// so pass the ids of each object/product\n// If the loop tries to add the same value again, it'll get ignored\n// ...with the array of ids we got on when first map() was used\n// run map() on it again and return the actual product from the cart\ncart=Array.from(new Set(cart.map(function(p){return p._id;}))).map(function(id){return cart.find(function(p){return p._id===id;});});localStorage.setItem('cart',JSON.stringify(cart));next();}};export var itemTotal=function itemTotal(){if(typeof window!=='undefined'){if(localStorage.getItem('cart')){return JSON.parse(localStorage.getItem('cart')).length;}}return 0;};export var getCart=function getCart(){if(typeof window!=='undefined'){if(localStorage.getItem('cart')){return JSON.parse(localStorage.getItem('cart'));}}return[];};export var updateItem=function updateItem(productId,count){var cart=[];if(typeof window!=='undefined'){if(localStorage.getItem('cart')){cart=JSON.parse(localStorage.getItem('cart'));}cart.map(function(product,i){if(product._id===productId){cart[i].count=count;}});localStorage.setItem('cart',JSON.stringify(cart));}};export var removeItem=function removeItem(productId){var cart=[];if(typeof window!=='undefined'){if(localStorage.getItem('cart')){cart=JSON.parse(localStorage.getItem('cart'));}cart.map(function(product,i){if(product._id===productId){cart.splice(i,1);}});localStorage.setItem('cart',JSON.stringify(cart));}return cart;};export var emptyCart=function emptyCart(next){if(typeof window!=='undefined'){localStorage.removeItem('cart');next();}};","map":{"version":3,"sources":["D:/minnicreations/ecommerce-front/src/core/cartHelpers.js"],"names":["addItem","item","count","next","f","cart","window","localStorage","getItem","JSON","parse","push","Array","from","Set","map","p","_id","id","find","setItem","stringify","itemTotal","length","getCart","updateItem","productId","product","i","removeItem","splice","emptyCart"],"mappings":"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","sourcesContent":["export const addItem = (item = [], count = 0, next = f => f) => {\r\n    let cart = [];\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n        cart.push({\r\n            ...item,\r\n            count: 1\r\n        });\r\n\r\n        // remove duplicates\r\n        // build an Array from new Set and turn it back into array using Array.from\r\n        // so that later we can re-map it\r\n        // new set will only allow unique values in it\r\n        // so pass the ids of each object/product\r\n        // If the loop tries to add the same value again, it'll get ignored\r\n        // ...with the array of ids we got on when first map() was used\r\n        // run map() on it again and return the actual product from the cart\r\n\r\n        cart = Array.from(new Set(cart.map(p => p._id))).map(id => {\r\n            return cart.find(p => p._id === id);\r\n        });\r\n\r\n        localStorage.setItem('cart', JSON.stringify(cart));\r\n        next();\r\n    }\r\n};\r\n\r\nexport const itemTotal = () => {\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            return JSON.parse(localStorage.getItem('cart')).length;\r\n        }\r\n    }\r\n    return 0;\r\n};\r\n\r\nexport const getCart = () => {\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            return JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n    }\r\n    return [];\r\n};\r\n\r\nexport const updateItem = (productId, count) => {\r\n    let cart = [];\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n\r\n        cart.map((product, i) => {\r\n            if (product._id === productId) {\r\n                cart[i].count = count;\r\n            }\r\n        });\r\n\r\n        localStorage.setItem('cart', JSON.stringify(cart));\r\n    }\r\n};\r\n\r\nexport const removeItem = productId => {\r\n    let cart = [];\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n\r\n        cart.map((product, i) => {\r\n            if (product._id === productId) {\r\n                cart.splice(i, 1);\r\n            }\r\n        });\r\n\r\n        localStorage.setItem('cart', JSON.stringify(cart));\r\n    }\r\n    return cart;\r\n};\r\n\r\nexport const emptyCart = next => {\r\n    if (typeof window !== 'undefined') {\r\n        localStorage.removeItem('cart');\r\n        next();\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}